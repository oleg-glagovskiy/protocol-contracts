{
  "contractName": "ILooksRare",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPercentageToAsk",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibLooksRare.TakerOrder",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isOrderAsk",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPercentageToAsk",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibLooksRare.MakerOrder",
          "name": "makerAsk",
          "type": "tuple"
        }
      ],
      "name": "matchAskWithTakerBidUsingETHAndWETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibLooksRare.Taker",
          "name": "takerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibLooksRare.QuoteType",
              "name": "quoteType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "globalNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subsetNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "orderNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "enum LibLooksRare.CollectionType",
              "name": "collectionType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "itemIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "additionalParameters",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibLooksRare.Maker",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "makerSignature",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "value",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum LibLooksRare.MerkleTreeNodePosition",
                  "name": "position",
                  "type": "uint8"
                }
              ],
              "internalType": "struct LibLooksRare.MerkleTreeNode[]",
              "name": "proof",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LibLooksRare.MerkleTree",
          "name": "merkleTree",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "affiliate",
          "type": "address"
        }
      ],
      "name": "executeTakerBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct LibLooksRare.Taker\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibLooksRare.QuoteType\",\"name\":\"quoteType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"globalNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subsetNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"enum LibLooksRare.CollectionType\",\"name\":\"collectionType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"additionalParameters\",\"type\":\"bytes\"}],\"internalType\":\"struct LibLooksRare.Maker\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"enum LibLooksRare.MerkleTreeNodePosition\",\"name\":\"position\",\"type\":\"uint8\"}],\"internalType\":\"struct LibLooksRare.MerkleTreeNode[]\",\"name\":\"proof\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LibLooksRare.MerkleTree\",\"name\":\"merkleTree\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"executeTakerBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct LibLooksRare.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct LibLooksRare.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchAskWithTakerBidUsingETHAndWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"params\":{\"affiliate\":\"Affiliate address\",\"makerAsk\":\"Maker ask struct\",\"makerSignature\":\"Maker signature\",\"merkleTree\":\"Merkle tree struct (if the signature contains multiple maker orders)\",\"takerBid\":\"Taker bid struct\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)\":{\"notice\":\"This function allows a user to execute a taker bid (against a maker ask).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/ILooksRare.sol\":\"ILooksRare\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/ILooksRare.sol\":{\"keccak256\":\"0x8211a020b463d88e40935cff89f07aead1d5e39995529c7e996e12f5068eaaa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b56d309a9b7ae7ccf3948624b9990e9834a12fb7e4a38d51ef10da5c2336996\",\"dweb:/ipfs/QmdVgwuJM2qSAVEJx8AmvTYKPUhweuQyHFKrPvPznW4gZb\"]},\"project:/contracts/libraries/LibLooksRare.sol\":{\"keccak256\":\"0xb1a211f0b3fffedc76cda775378ff21cef4928b4fc6cde5b90b5e026e549e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df8f176b8c3b626c1155ff63cdee5530d12bf1eedbae3de9a8b5e1919f0acc97\",\"dweb:/ipfs/QmSKCwvyvEUTKFfobLthB6RVMYQQpVCjv7Q3yPcdeBpfo1\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.6;\npragma abicoder v2;\n\nimport \"../libraries/LibLooksRare.sol\";\n\ninterface ILooksRare {\n    function matchAskWithTakerBidUsingETHAndWETH(LibLooksRare.TakerOrder calldata takerBid, LibLooksRare.MakerOrder calldata makerAsk) external payable;\n\n    /**\n     * @notice This function allows a user to execute a taker bid (against a maker ask).\n     * @param takerBid Taker bid struct\n     * @param makerAsk Maker ask struct\n     * @param makerSignature Maker signature\n     * @param merkleTree Merkle tree struct (if the signature contains multiple maker orders)\n     * @param affiliate Affiliate address\n     */\n    function executeTakerBid(LibLooksRare.Taker calldata takerBid, LibLooksRare.Maker calldata makerAsk, bytes calldata makerSignature, LibLooksRare.MerkleTree calldata merkleTree, address affiliate) external payable;\n}\n",
  "sourcePath": "/Users/vfadeev/Work/rarible/protocol/protocol-contracts/master/protocol-contracts/projects/exchange-wrapper/contracts/interfaces/ILooksRare.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/ILooksRare.sol",
    "exportedSymbols": {
      "ILooksRare": [
        10325
      ],
      "LibLooksRare": [
        10708
      ]
    },
    "id": 10326,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10301,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:66"
      },
      {
        "id": 10302,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:19:66"
      },
      {
        "absolutePath": "project:/contracts/libraries/LibLooksRare.sol",
        "file": "../libraries/LibLooksRare.sol",
        "id": 10303,
        "nodeType": "ImportDirective",
        "scope": 10326,
        "sourceUnit": 10709,
        "src": "77:39:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 10325,
        "linearizedBaseContracts": [
          10325
        ],
        "name": "ILooksRare",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "b4e4b296",
            "id": 10310,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchAskWithTakerBidUsingETHAndWETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10305,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nodeType": "VariableDeclaration",
                  "scope": 10310,
                  "src": "190:41:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$10649_calldata_ptr",
                    "typeString": "struct LibLooksRare.TakerOrder"
                  },
                  "typeName": {
                    "id": 10304,
                    "name": "LibLooksRare.TakerOrder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10649,
                    "src": "190:23:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$10649_storage_ptr",
                      "typeString": "struct LibLooksRare.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10307,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nodeType": "VariableDeclaration",
                  "scope": 10310,
                  "src": "233:41:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MakerOrder_$10636_calldata_ptr",
                    "typeString": "struct LibLooksRare.MakerOrder"
                  },
                  "typeName": {
                    "id": 10306,
                    "name": "LibLooksRare.MakerOrder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10636,
                    "src": "233:23:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MakerOrder_$10636_storage_ptr",
                      "typeString": "struct LibLooksRare.MakerOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:86:66"
            },
            "returnParameters": {
              "id": 10309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:66"
            },
            "scope": 10325,
            "src": "145:148:66",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 10311,
              "nodeType": "StructuredDocumentation",
              "src": "299:361:66",
              "text": " @notice This function allows a user to execute a taker bid (against a maker ask).\n @param takerBid Taker bid struct\n @param makerAsk Maker ask struct\n @param makerSignature Maker signature\n @param merkleTree Merkle tree struct (if the signature contains multiple maker orders)\n @param affiliate Affiliate address"
            },
            "functionSelector": "8585ae03",
            "id": 10324,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeTakerBid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10313,
                  "mutability": "mutable",
                  "name": "takerBid",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "690:36:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Taker_$10693_calldata_ptr",
                    "typeString": "struct LibLooksRare.Taker"
                  },
                  "typeName": {
                    "id": 10312,
                    "name": "LibLooksRare.Taker",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10693,
                    "src": "690:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Taker_$10693_storage_ptr",
                      "typeString": "struct LibLooksRare.Taker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10315,
                  "mutability": "mutable",
                  "name": "makerAsk",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "728:36:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Maker_$10688_calldata_ptr",
                    "typeString": "struct LibLooksRare.Maker"
                  },
                  "typeName": {
                    "id": 10314,
                    "name": "LibLooksRare.Maker",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10688,
                    "src": "728:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Maker_$10688_storage_ptr",
                      "typeString": "struct LibLooksRare.Maker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10317,
                  "mutability": "mutable",
                  "name": "makerSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "766:29:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10316,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10319,
                  "mutability": "mutable",
                  "name": "merkleTree",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "797:43:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleTree_$10707_calldata_ptr",
                    "typeString": "struct LibLooksRare.MerkleTree"
                  },
                  "typeName": {
                    "id": 10318,
                    "name": "LibLooksRare.MerkleTree",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10707,
                    "src": "797:23:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$10707_storage_ptr",
                      "typeString": "struct LibLooksRare.MerkleTree"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10321,
                  "mutability": "mutable",
                  "name": "affiliate",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "842:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:171:66"
            },
            "returnParameters": {
              "id": 10323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:0:66"
            },
            "scope": 10325,
            "src": "665:213:66",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10326,
        "src": "118:762:66"
      }
    ],
    "src": "33:848:66"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/interfaces/ILooksRare.sol",
      "exportedSymbols": {
        "ILooksRare": [
          10325
        ],
        "LibLooksRare": [
          10708
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 10301,
        "name": "PragmaDirective",
        "src": "33:22:66"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 10302,
        "name": "PragmaDirective",
        "src": "56:19:66"
      },
      {
        "attributes": {
          "SourceUnit": 10709,
          "absolutePath": "project:/contracts/libraries/LibLooksRare.sol",
          "file": "../libraries/LibLooksRare.sol",
          "scope": 10326,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10303,
        "name": "ImportDirective",
        "src": "77:39:66"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            10325
          ],
          "name": "ILooksRare",
          "scope": 10326
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "b4e4b296",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "matchAskWithTakerBidUsingETHAndWETH",
              "scope": 10325,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "takerBid",
                      "scope": 10310,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct LibLooksRare.TakerOrder",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "LibLooksRare.TakerOrder",
                          "referencedDeclaration": 10649,
                          "type": "struct LibLooksRare.TakerOrder"
                        },
                        "id": 10304,
                        "name": "UserDefinedTypeName",
                        "src": "190:23:66"
                      }
                    ],
                    "id": 10305,
                    "name": "VariableDeclaration",
                    "src": "190:41:66"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "makerAsk",
                      "scope": 10310,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct LibLooksRare.MakerOrder",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "LibLooksRare.MakerOrder",
                          "referencedDeclaration": 10636,
                          "type": "struct LibLooksRare.MakerOrder"
                        },
                        "id": 10306,
                        "name": "UserDefinedTypeName",
                        "src": "233:23:66"
                      }
                    ],
                    "id": 10307,
                    "name": "VariableDeclaration",
                    "src": "233:41:66"
                  }
                ],
                "id": 10308,
                "name": "ParameterList",
                "src": "189:86:66"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10309,
                "name": "ParameterList",
                "src": "292:0:66"
              }
            ],
            "id": 10310,
            "name": "FunctionDefinition",
            "src": "145:148:66"
          },
          {
            "attributes": {
              "functionSelector": "8585ae03",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "executeTakerBid",
              "scope": 10325,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice This function allows a user to execute a taker bid (against a maker ask).\n @param takerBid Taker bid struct\n @param makerAsk Maker ask struct\n @param makerSignature Maker signature\n @param merkleTree Merkle tree struct (if the signature contains multiple maker orders)\n @param affiliate Affiliate address"
                },
                "id": 10311,
                "name": "StructuredDocumentation",
                "src": "299:361:66"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "takerBid",
                      "scope": 10324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct LibLooksRare.Taker",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "LibLooksRare.Taker",
                          "referencedDeclaration": 10693,
                          "type": "struct LibLooksRare.Taker"
                        },
                        "id": 10312,
                        "name": "UserDefinedTypeName",
                        "src": "690:18:66"
                      }
                    ],
                    "id": 10313,
                    "name": "VariableDeclaration",
                    "src": "690:36:66"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "makerAsk",
                      "scope": 10324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct LibLooksRare.Maker",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "LibLooksRare.Maker",
                          "referencedDeclaration": 10688,
                          "type": "struct LibLooksRare.Maker"
                        },
                        "id": 10314,
                        "name": "UserDefinedTypeName",
                        "src": "728:18:66"
                      }
                    ],
                    "id": 10315,
                    "name": "VariableDeclaration",
                    "src": "728:36:66"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "makerSignature",
                      "scope": 10324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 10316,
                        "name": "ElementaryTypeName",
                        "src": "766:5:66"
                      }
                    ],
                    "id": 10317,
                    "name": "VariableDeclaration",
                    "src": "766:29:66"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleTree",
                      "scope": 10324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct LibLooksRare.MerkleTree",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "LibLooksRare.MerkleTree",
                          "referencedDeclaration": 10707,
                          "type": "struct LibLooksRare.MerkleTree"
                        },
                        "id": 10318,
                        "name": "UserDefinedTypeName",
                        "src": "797:23:66"
                      }
                    ],
                    "id": 10319,
                    "name": "VariableDeclaration",
                    "src": "797:43:66"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "affiliate",
                      "scope": 10324,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10320,
                        "name": "ElementaryTypeName",
                        "src": "842:7:66"
                      }
                    ],
                    "id": 10321,
                    "name": "VariableDeclaration",
                    "src": "842:17:66"
                  }
                ],
                "id": 10322,
                "name": "ParameterList",
                "src": "689:171:66"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10323,
                "name": "ParameterList",
                "src": "877:0:66"
              }
            ],
            "id": 10324,
            "name": "FunctionDefinition",
            "src": "665:213:66"
          }
        ],
        "id": 10325,
        "name": "ContractDefinition",
        "src": "118:762:66"
      }
    ],
    "id": 10326,
    "name": "SourceUnit",
    "src": "33:848:66"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-01-18T15:37:06.896Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
        "params": {
          "affiliate": "Affiliate address",
          "makerAsk": "Maker ask struct",
          "makerSignature": "Maker signature",
          "merkleTree": "Merkle tree struct (if the signature contains multiple maker orders)",
          "takerBid": "Taker bid struct"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeTakerBid((address,bytes),(uint8,uint256,uint256,uint256,uint256,uint8,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,(bytes32,(bytes32,uint8)[]),address)": {
        "notice": "This function allows a user to execute a taker bid (against a maker ask)."
      }
    },
    "version": 1
  }
}