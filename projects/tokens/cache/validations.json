{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:18",
        "version": {
          "withMetadata": "e40a047d02568e4b09dc42878e7cb030c4836e31e9ce9e7f5442d6bf8db99aa6",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:ERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155ReceiverUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "7d6a811c59c82701d72d6870ca95440d0a136dde39f17c6c6c3b7add1f2cb935",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:29",
        "version": {
          "withMetadata": "d68f951d9afd4de07d2fdd2e0108453795f3e7a7297394e08046c15e2111cdbc",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:29",
        "version": {
          "withMetadata": "8087312fefba91d77326158d394f177f8e2cf096b704b39e48a0c58120c4cddf",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "13ec13ddac86cccdf66d6835d3771e31048341c79ceacac06809adc6a72cb484",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "bbea698b21ba8429f79e8c15ae81593944b5f0fd04a010156c6f7c92dfbb0bee",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/BeaconProxy.sol:17",
        "version": {
          "withMetadata": "4129fa760a25fe80333d3f4fe6cf3dc8f2d38e7bb1a7e64b0f1ce3f1fe9e50f4",
          "withoutMetadata": "4129fa760a25fe80333d3f4fe6cf3dc8f2d38e7bb1a7e64b0f1ce3f1fe9e50f4",
          "linkedWithoutMetadata": "4129fa760a25fe80333d3f4fe6cf3dc8f2d38e7bb1a7e64b0f1ce3f1fe9e50f4"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/BeaconProxy.sol:35"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/IBeacon.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "dd6ec88ebf42d6842e87e28710b7eeb0d4e9bd1415148e9618f5c0fe2a14061f",
          "withoutMetadata": "dd6ec88ebf42d6842e87e28710b7eeb0d4e9bd1415148e9618f5c0fe2a14061f",
          "linkedWithoutMetadata": "dd6ec88ebf42d6842e87e28710b7eeb0d4e9bd1415148e9618f5c0fe2a14061f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "2304716e8dda4f0ff9ab5f898ff43fa2e8b21a4afaadafeb331577fabe381b59",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/exchange-interfaces/contracts/INftTransferProxy.sol:INftTransferProxy": {
        "src": "@rarible/exchange-interfaces/contracts/INftTransferProxy.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "erc721safeTransferFrom(address,address,address,uint256)",
          "erc1155safeTransferFrom(address,address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:ITransferProxy": {
        "src": "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(((bytes4,bytes),uint256),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:IERC1155LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintAndTransfer((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,uint256)",
          "transferFromOrMint((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:7",
        "version": {
          "withMetadata": "22e6182aa2fb238bd994c9f6436ee2d3a0a5e3faafc17a3ec0116a95722e2237",
          "withoutMetadata": "2b89d368bf32c4b81e7fbdff642262d8c1e722d11215d2239ac8e010aabb7fe4",
          "linkedWithoutMetadata": "2b89d368bf32c4b81e7fbdff642262d8c1e722d11215d2239ac8e010aabb7fe4"
        },
        "inherit": [],
        "libraries": [
          "@rarible/lib-part/contracts/LibPart.sol:LibPart"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)",
          "transferFromOrMint((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:7",
        "version": {
          "withMetadata": "5bca8f8a8f42f6cae8f517f908c17214515a615824ff113d821bc5b5ea0de192",
          "withoutMetadata": "ff8a4ea15021081b0afd60fb97a28e84e53c402c2f0c6d78953e1c6c52cc5d96",
          "linkedWithoutMetadata": "ff8a4ea15021081b0afd60fb97a28e84e53c402c2f0c6d78953e1c6c52cc5d96"
        },
        "inherit": [],
        "libraries": [
          "@rarible/lib-part/contracts/LibPart.sol:LibPart"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/test/contracts/ERC1155LazyMintTransferProxyTest.sol:ERC1155LazyMintTransferProxyTest": {
        "src": "@rarible/lazy-mint/test/contracts/ERC1155LazyMintTransferProxyTest.sol:11",
        "version": {
          "withMetadata": "e5a3d18f2f250c4ab1ed29d58eacdec64e07c3c25d8d5a1ed5cf78a671b4a5df",
          "withoutMetadata": "d3f5b502708640f8378018a2a5570b16e1a1bb76f24ff1105eec92f76082ac5e",
          "linkedWithoutMetadata": "d3f5b502708640f8378018a2a5570b16e1a1bb76f24ff1105eec92f76082ac5e"
        },
        "inherit": [
          "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:ITransferProxy",
          "@rarible/role-operator/contracts/OperatorRole.sol:OperatorRole",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint"
        ],
        "methods": [
          "transfer(((bytes4,bytes),uint256),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OperatorRole",
              "src": "@rarible/role-operator/contracts/OperatorRole.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/test/contracts/ERC721LazyMintTransferProxyTest.sol:ERC721LazyMintTransferProxyTest": {
        "src": "@rarible/lazy-mint/test/contracts/ERC721LazyMintTransferProxyTest.sol:11",
        "version": {
          "withMetadata": "f2ed70760e7c14d8bcaf7c19973ff28be006f7429776217c70e6390efa244a68",
          "withoutMetadata": "0e15626e84ac785c0cc7d723b877395056362026cac9dcb5169ebe6a49cf95db",
          "linkedWithoutMetadata": "0e15626e84ac785c0cc7d723b877395056362026cac9dcb5169ebe6a49cf95db"
        },
        "inherit": [
          "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:ITransferProxy",
          "@rarible/role-operator/contracts/OperatorRole.sol:OperatorRole",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint"
        ],
        "methods": [
          "transfer(((bytes4,bytes),uint256),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OperatorRole",
              "src": "@rarible/role-operator/contracts/OperatorRole.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-asset/contracts/LibAsset.sol:LibAsset": {
        "src": "@rarible/lib-asset/contracts/LibAsset.sol:5",
        "version": {
          "withMetadata": "f46effe98e0ac958ceeee44d3f69c1a340eb9877d76c0b64562ded0dd6cac256",
          "withoutMetadata": "dfb2a20d76dd998f1f9d004105cda0afc5b404d275243058a631d6456a85ec02",
          "linkedWithoutMetadata": "dfb2a20d76dd998f1f9d004105cda0afc5b404d275243058a631d6456a85ec02"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-part/contracts/LibPart.sol:LibPart": {
        "src": "@rarible/lib-part/contracts/LibPart.sol:5",
        "version": {
          "withMetadata": "1e15b904046cd0ace63b43061c288583efbada2020af59ab16c20aa684bd553e",
          "withoutMetadata": "cf9a2784efad9e0204aae8177c738952b8e0ef9678c42c6202ab3384327ad817",
          "linkedWithoutMetadata": "cf9a2784efad9e0204aae8177c738952b8e0ef9678c42c6202ab3384327ad817"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-signature/contracts/ERC1271.sol:ERC1271": {
        "src": "@rarible/lib-signature/contracts/ERC1271.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-signature/contracts/LibSignature.sol:LibSignature": {
        "src": "@rarible/lib-signature/contracts/LibSignature.sol:5",
        "version": {
          "withMetadata": "b05a77a09d32863a8f847506c260d10c891a1ed820591e4d2505b67a6155f15d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-signature/test/contracts/TestERC1271.sol:TestERC1271": {
        "src": "@rarible/lib-signature/test/contracts/TestERC1271.sol:7",
        "version": {
          "withMetadata": "9b4d31b705e2a97be5adcd0c868342b87dd8cb317492dade8029f75a44a47a63",
          "withoutMetadata": "8bf1744df9fcfeb50e4bbeb5744f73a9683d84ef957223e79a71207f7ddb9fe1",
          "linkedWithoutMetadata": "8bf1744df9fcfeb50e4bbeb5744f73a9683d84ef957223e79a71207f7ddb9fe1"
        },
        "inherit": [
          "@rarible/lib-signature/contracts/ERC1271.sol:ERC1271"
        ],
        "libraries": [],
        "methods": [
          "setReturnSuccessfulValidSignature(bool)",
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "returnSuccessfulValidSignature",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "TestERC1271",
              "src": "@rarible/lib-signature/test/contracts/TestERC1271.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:EIP712MetaTransaction": {
        "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)",
          "getNonce(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EIP712MetaTransaction",
              "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:14"
            },
            {
              "label": "domainSeparator",
              "offset": 0,
              "slot": "52",
              "type": "t_bytes32",
              "contract": "EIP712MetaTransaction",
              "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/role-operator/contracts/OperatorRole.sol:OperatorRole": {
        "src": "@rarible/role-operator/contracts/OperatorRole.sol:7",
        "version": {
          "withMetadata": "ab8aa34dd7bc65f0fee0e1b62aa6a6078dd284ae99df1fe7838ddf8297d9bc5c",
          "withoutMetadata": "e9bd0f4834d90b5c8dd439c1b8750166749e13a1fa934843ba7450c902aa42fc",
          "linkedWithoutMetadata": "e9bd0f4834d90b5c8dd439c1b8750166749e13a1fa934843ba7450c902aa42fc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__OperatorRole_init()",
          "addOperator(address)",
          "removeOperator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OperatorRole",
              "src": "@rarible/role-operator/contracts/OperatorRole.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable": {
        "src": "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:10",
        "inherit": [
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/IERC2981.sol:IERC2981": {
        "src": "@rarible/royalties/contracts/IERC2981.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981": {
        "src": "@rarible/royalties/contracts/LibRoyalties2981.sol:7",
        "version": {
          "withMetadata": "5e91a4e0643c29a618703bc15f59ecbd0fba5a1c2805070319238c12b50d4850",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2": {
        "src": "@rarible/royalties/contracts/LibRoyaltiesV2.sol:5",
        "version": {
          "withMetadata": "11b652e8e75fec691a455ebe543c8c6cde6b203d5e0f3f965d8be82f832ae4f2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2": {
        "src": "@rarible/royalties/contracts/RoyaltiesV2.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRaribleV2Royalties(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties": {
        "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "royalties",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl": {
        "src": "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:11",
        "version": {
          "withMetadata": "9a74dbcc826062979335908aa7cbac18d407bfb6e742ea3cdeb4555b5bff99b4",
          "withoutMetadata": "8f687c8c5ae8cb68d6b54f7b3d9640d8d3623c5a37d3c9f3d6f8e2c0fdbc968b",
          "linkedWithoutMetadata": "8f687c8c5ae8cb68d6b54f7b3d9640d8d3623c5a37d3c9f3d6f8e2c0fdbc968b"
        },
        "inherit": [
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties"
        ],
        "libraries": [],
        "methods": [
          "getRaribleV2Royalties(uint256)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "royalties",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/transfer-proxy/test/contracts/TransferProxyTest.sol:TransferProxyTest": {
        "src": "@rarible/transfer-proxy/test/contracts/TransferProxyTest.sol:7",
        "version": {
          "withMetadata": "5d1184ff386f82de81b4e4b40ca78780da6054f0878f15a17c97610c945c4210",
          "withoutMetadata": "a43c4f5300d6387987b2c0861c43c1c6b92be4feda7110f27a2c5b767e012547",
          "linkedWithoutMetadata": "a43c4f5300d6387987b2c0861c43c1c6b92be4feda7110f27a2c5b767e012547"
        },
        "inherit": [
          "@rarible/exchange-interfaces/contracts/INftTransferProxy.sol:INftTransferProxy"
        ],
        "libraries": [],
        "methods": [
          "erc721safeTransferFrom(address,address,address,uint256)",
          "erc1155safeTransferFrom(address,address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/HasContractURI.sol:HasContractURI": {
        "src": "contracts/HasContractURI.sol:7",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/IsPrivateCollection.sol:IsPrivateCollection": {
        "src": "contracts/IsPrivateCollection.sol:5",
        "version": {
          "withMetadata": "6a1a6f99109463b9881733b02c08f19fc486ff3f4612a8a96288f714d14df4f8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "isPrivate",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:9"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/LibURI.sol:LibURI": {
        "src": "contracts/LibURI.sol:5",
        "version": {
          "withMetadata": "721f1f35d146919bc5db86d7c3b71ef97643dd952c209b1841fd5a91f9fc7c25",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/Mint721Validator.sol:Mint721Validator": {
        "src": "contracts/Mint721Validator.sol:8",
        "version": {
          "withMetadata": "9687cccdf73bdc9081946a35a9d9da8cbccbd8eb444da17b5047b6c2c79a6e45",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/access/MinterAccessControl.sol:MinterAccessControl": {
        "src": "contracts/access/MinterAccessControl.sol:7",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "addMinter(address)",
          "addMinters(address[])",
          "removeMinter(address)",
          "isMinter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/beacons/ERC1155RaribleBeacon.sol:ERC1155RaribleBeacon": {
        "src": "contracts/beacons/ERC1155RaribleBeacon.sol:7",
        "version": {
          "withMetadata": "ee4d7f91c7f4992c1dce34b7b33ae7e64814ed37f70365c69040ae674d413353",
          "withoutMetadata": "ee4d7f91c7f4992c1dce34b7b33ae7e64814ed37f70365c69040ae674d413353",
          "linkedWithoutMetadata": "ee4d7f91c7f4992c1dce34b7b33ae7e64814ed37f70365c69040ae674d413353"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:UpgradeableBeacon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RaribleBeacon",
            "src": "contracts/beacons/ERC1155RaribleBeacon.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/beacons/ERC1155RaribleBeaconMeta.sol:ERC1155RaribleBeaconMeta": {
        "src": "contracts/beacons/ERC1155RaribleBeaconMeta.sol:7",
        "version": {
          "withMetadata": "15c6552b8f782279a6142550cf2277b1c8144fa4d8bddb5187a8b8d94c16a15d",
          "withoutMetadata": "15c6552b8f782279a6142550cf2277b1c8144fa4d8bddb5187a8b8d94c16a15d",
          "linkedWithoutMetadata": "15c6552b8f782279a6142550cf2277b1c8144fa4d8bddb5187a8b8d94c16a15d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:UpgradeableBeacon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RaribleBeaconMeta",
            "src": "contracts/beacons/ERC1155RaribleBeaconMeta.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/beacons/ERC721RaribleBeacon.sol:ERC721RaribleBeacon": {
        "src": "contracts/beacons/ERC721RaribleBeacon.sol:7",
        "version": {
          "withMetadata": "ff99a89800ed4363f9e8a389f8417439d55a90eed87f6851b06134a4be42c417",
          "withoutMetadata": "ff99a89800ed4363f9e8a389f8417439d55a90eed87f6851b06134a4be42c417",
          "linkedWithoutMetadata": "ff99a89800ed4363f9e8a389f8417439d55a90eed87f6851b06134a4be42c417"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:UpgradeableBeacon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721RaribleBeacon",
            "src": "contracts/beacons/ERC721RaribleBeacon.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/beacons/ERC721RaribleMinimalBeacon.sol:ERC721RaribleMinimalBeacon": {
        "src": "contracts/beacons/ERC721RaribleMinimalBeacon.sol:7",
        "version": {
          "withMetadata": "a430dd23c51158e246285b7127b0b047c8d805bd1348a2c2a840574388dc4515",
          "withoutMetadata": "a430dd23c51158e246285b7127b0b047c8d805bd1348a2c2a840574388dc4515",
          "linkedWithoutMetadata": "a430dd23c51158e246285b7127b0b047c8d805bd1348a2c2a840574388dc4515"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:UpgradeableBeacon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721RaribleMinimalBeacon",
            "src": "contracts/beacons/ERC721RaribleMinimalBeacon.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/beacons/ERC721RaribleMinimalBeaconMeta.sol:ERC721RaribleMinimalBeaconMeta": {
        "src": "contracts/beacons/ERC721RaribleMinimalBeaconMeta.sol:7",
        "version": {
          "withMetadata": "6a06d271f32145505a653c6eb14595685f3dda39f712b036e6be6dcb2e6d6f50",
          "withoutMetadata": "6a06d271f32145505a653c6eb14595685f3dda39f712b036e6be6dcb2e6d6f50",
          "linkedWithoutMetadata": "6a06d271f32145505a653c6eb14595685f3dda39f712b036e6be6dcb2e6d6f50"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:UpgradeableBeacon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721RaribleMinimalBeaconMeta",
            "src": "contracts/beacons/ERC721RaribleMinimalBeaconMeta.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/create-2/ERC1155RaribleFactoryC2.sol:ERC1155RaribleFactoryC2": {
        "src": "contracts/create-2/ERC1155RaribleFactoryC2.sol:16",
        "version": {
          "withMetadata": "341eaeb36f497b721babc80814fb05ff6803cd486391b3e7d62a4a9435a801ca",
          "withoutMetadata": "2eb73445574695c42561fe57c52b4d42adec7ab86e819e93b7dd83d3cc80a40d",
          "linkedWithoutMetadata": "2eb73445574695c42561fe57c52b4d42adec7ab86e819e93b7dd83d3cc80a40d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "createToken(string,string,string,string,uint256)",
          "createToken(string,string,string,string,address[],uint256)",
          "getAddress(string,string,string,string,uint256)",
          "getAddress(string,string,string,string,address[],uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RaribleFactoryC2",
            "src": "contracts/create-2/ERC1155RaribleFactoryC2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "beacon",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ERC1155RaribleFactoryC2",
              "src": "contracts/create-2/ERC1155RaribleFactoryC2.sol:17"
            },
            {
              "label": "transferProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ERC1155RaribleFactoryC2",
              "src": "contracts/create-2/ERC1155RaribleFactoryC2.sol:18"
            },
            {
              "label": "lazyTransferProxy",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ERC1155RaribleFactoryC2",
              "src": "contracts/create-2/ERC1155RaribleFactoryC2.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/create-2/ERC721RaribleFactoryC2.sol:ERC721RaribleFactoryC2": {
        "src": "contracts/create-2/ERC721RaribleFactoryC2.sol:16",
        "version": {
          "withMetadata": "95cf91eead2d70cb281edee5d1b1acae551bd8d76cb4d456f1ee163a49021ec6",
          "withoutMetadata": "6a827d1c53e94d00b5cbc7a1eba82a200ac91056064e929175a809f4f75ffeb8",
          "linkedWithoutMetadata": "6a827d1c53e94d00b5cbc7a1eba82a200ac91056064e929175a809f4f75ffeb8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "createToken(string,string,string,string,uint256)",
          "createToken(string,string,string,string,address[],uint256)",
          "getAddress(string,string,string,string,uint256)",
          "getAddress(string,string,string,string,address[],uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721RaribleFactoryC2",
            "src": "contracts/create-2/ERC721RaribleFactoryC2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            },
            {
              "label": "beacon",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ERC721RaribleFactoryC2",
              "src": "contracts/create-2/ERC721RaribleFactoryC2.sol:17"
            },
            {
              "label": "transferProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ERC721RaribleFactoryC2",
              "src": "contracts/create-2/ERC721RaribleFactoryC2.sol:18"
            },
            {
              "label": "lazyTransferProxy",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ERC721RaribleFactoryC2",
              "src": "contracts/create-2/ERC721RaribleFactoryC2.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155Base.sol:ERC1155Base": {
        "src": "contracts/erc-1155/ERC1155Base.sol:12",
        "inherit": [
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-1155/ERC1155Lazy.sol:ERC1155Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-1155/ERC1155BaseURI.sol:ERC1155BaseURI",
          "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:ERC1155BurnableUpgradeable",
          "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval",
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:IERC1155LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "burnBatch(address,uint256[],uint256[])",
          "burn(address,uint256,uint256)",
          "uri(uint256)",
          "setBaseURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "153",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BurnableUpgradeable",
              "src": "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:41"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "302",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:14"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "303",
              "type": "t_string_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:69"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "354",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "355",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:20"
            },
            {
              "label": "supply",
              "offset": 0,
              "slot": "508",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:21"
            },
            {
              "label": "minted",
              "offset": 0,
              "slot": "509",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "510",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:150"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "560",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "561",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "610",
              "type": "t_string_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:13"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "611",
              "type": "t_string_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "612",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:89"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155BaseURI.sol:ERC1155BaseURI": {
        "src": "contracts/erc-1155/ERC1155BaseURI.sol:10",
        "version": {
          "withMetadata": "520f86558ecde53ead3fb7aa97a1e7ded4fa48b1a9674fd5debbe9b920937ccf",
          "withoutMetadata": "daec95bbd7f94e2ed89f68e27f2315dcaa66b8475c815cb3a02175bb7d720df4",
          "linkedWithoutMetadata": "daec95bbd7f94e2ed89f68e27f2315dcaa66b8475c815cb3a02175bb7d720df4"
        },
        "inherit": [
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "contracts/LibURI.sol:LibURI"
        ],
        "methods": [
          "baseURI()",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:14"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:69"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:ERC1155BurnableUpgradeable": {
        "src": "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:14",
        "inherit": [
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(address,uint256,uint256)",
          "burnBatch(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BurnableUpgradeable",
              "src": "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval": {
        "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:7",
        "inherit": [
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155Lazy.sol:ERC1155Lazy": {
        "src": "contracts/erc-1155/ERC1155Lazy.sol:13",
        "inherit": [
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-1155/ERC1155BaseURI.sol:ERC1155BaseURI",
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:IERC1155LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint",
          "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981",
          "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "transferFromOrMint((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address,uint256)",
          "mintAndTransfer((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,uint256)",
          "updateAccount(uint256,address,address)",
          "getCreators(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:14"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:69"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "203",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "204",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "255",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:20"
            },
            {
              "label": "supply",
              "offset": 0,
              "slot": "357",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:21"
            },
            {
              "label": "minted",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "359",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:150"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155Rarible.sol:ERC1155Rarible": {
        "src": "contracts/erc-1155/ERC1155Rarible.sol:10",
        "version": {
          "withMetadata": "7ee94920cbc3502641efbfd52244e6ad2058ec69283c3fdfe002a65af9dbd4b0",
          "withoutMetadata": "3c7276b9127b9efad7eb7eed26a7cb53bf19a65b9458c6dcd18a692806ca899b",
          "linkedWithoutMetadata": "3c7276b9127b9efad7eb7eed26a7cb53bf19a65b9458c6dcd18a692806ca899b"
        },
        "inherit": [
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "contracts/IsPrivateCollection.sol:IsPrivateCollection",
          "contracts/erc-1155/ERC1155Base.sol:ERC1155Base",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-1155/ERC1155Lazy.sol:ERC1155Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-1155/ERC1155BaseURI.sol:ERC1155BaseURI",
          "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:ERC1155BurnableUpgradeable",
          "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval",
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:IERC1155LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC1155RaribleUser_init(string,string,string,string,address[],address,address)",
          "__ERC1155Rarible_init(string,string,string,string,address,address)",
          "mintAndTransfer((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "153",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BurnableUpgradeable",
              "src": "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:41"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "302",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:14"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "303",
              "type": "t_string_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:69"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "354",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "355",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:20"
            },
            {
              "label": "supply",
              "offset": 0,
              "slot": "508",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:21"
            },
            {
              "label": "minted",
              "offset": 0,
              "slot": "509",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "510",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:150"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "560",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "561",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "610",
              "type": "t_string_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:13"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "611",
              "type": "t_string_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "612",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:89"
            },
            {
              "label": "isPrivate",
              "offset": 0,
              "slot": "662",
              "type": "t_bool",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "663",
              "type": "t_array(t_uint256)49_storage",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:9"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "712",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "713",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable": {
        "src": "contracts/erc-1155/ERC1155Upgradeable.sol:22",
        "version": {
          "withMetadata": "0f0b372eb26bdacdfd8009fc7cc8bb38d21d5f2d21fc7d1dd34ea64b433dd55d",
          "withoutMetadata": "d66db392f7d1640635900c859aea3c33cf6aa7f59e7fe151679e4eeef3d2b881",
          "linkedWithoutMetadata": "d66db392f7d1640635900c859aea3c33cf6aa7f59e7fe151679e4eeef3d2b881"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator": {
        "src": "contracts/erc-1155/Mint1155Validator.sol:8",
        "version": {
          "withMetadata": "c198cfbee258a57445ad7817ccdce58eb070291e4e495bd15920565f9687df4c",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/erc-1155-meta/ERC1155RaribleMeta.sol:ERC1155RaribleMeta": {
        "src": "contracts/erc-1155/erc-1155-meta/ERC1155RaribleMeta.sol:11",
        "version": {
          "withMetadata": "1ebee9d02d3afd9c50802cf2ffc77f375bfe03e7b2cb8517ea85d2e749fb27bb",
          "withoutMetadata": "81f81ce285033e769d4f45917a700ad89c9f57443edb22dd03afe5e38b07e239",
          "linkedWithoutMetadata": "81f81ce285033e769d4f45917a700ad89c9f57443edb22dd03afe5e38b07e239"
        },
        "inherit": [
          "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:EIP712MetaTransaction",
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "contracts/IsPrivateCollection.sol:IsPrivateCollection",
          "contracts/erc-1155/ERC1155Base.sol:ERC1155Base",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-1155/ERC1155Lazy.sol:ERC1155Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-1155/ERC1155BaseURI.sol:ERC1155BaseURI",
          "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:ERC1155BurnableUpgradeable",
          "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval",
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:IERC1155LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC1155RaribleUser_init(string,string,string,string,address[],address,address)",
          "__ERC1155Rarible_init(string,string,string,string,address,address)",
          "mintAndTransfer((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "153",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BurnableUpgradeable",
              "src": "contracts/erc-1155/ERC1155BurnableUpgradeable.sol:41"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "302",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:14"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "303",
              "type": "t_string_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155BaseURI",
              "src": "contracts/erc-1155/ERC1155BaseURI.sol:69"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "354",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "355",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "506",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:20"
            },
            {
              "label": "supply",
              "offset": 0,
              "slot": "508",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:21"
            },
            {
              "label": "minted",
              "offset": 0,
              "slot": "509",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "510",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Lazy",
              "src": "contracts/erc-1155/ERC1155Lazy.sol:150"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "560",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "561",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "610",
              "type": "t_string_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:13"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "611",
              "type": "t_string_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "612",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155Base",
              "src": "contracts/erc-1155/ERC1155Base.sol:89"
            },
            {
              "label": "isPrivate",
              "offset": 0,
              "slot": "662",
              "type": "t_bool",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "663",
              "type": "t_array(t_uint256)49_storage",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:9"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "712",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "713",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "763",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EIP712MetaTransaction",
              "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:14"
            },
            {
              "label": "domainSeparator",
              "offset": 0,
              "slot": "764",
              "type": "t_bytes32",
              "contract": "EIP712MetaTransaction",
              "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator": {
        "src": "contracts/erc-1271/ERC1271Validator.sol:9",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@rarible/lib-signature/contracts/LibSignature.sol:LibSignature"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721BaseMinimal.sol:ERC721BaseMinimal": {
        "src": "contracts/erc-721-minimal/ERC721BaseMinimal.sol:12",
        "inherit": [
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721-minimal/ERC721LazyMinimal.sol:ERC721LazyMinimal",
          "contracts/erc-721-minimal/ERC721URI.sol:ERC721URI",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:ERC721BurnableUpgradeableMinimal",
          "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal",
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "tokenURI(uint256)",
          "setBaseURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "254",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "256",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "257",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "258",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "260",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:19"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "456",
              "type": "t_string_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:92"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:114"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "558",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "559",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "608",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BaseMinimal",
              "src": "contracts/erc-721-minimal/ERC721BaseMinimal.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:ERC721BurnableUpgradeableMinimal": {
        "src": "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:13",
        "inherit": [
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal": {
        "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:7",
        "inherit": [
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721LazyMinimal.sol:ERC721LazyMinimal": {
        "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:14",
        "inherit": [
          "contracts/erc-721-minimal/ERC721URI.sol:ERC721URI",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint",
          "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981",
          "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "transferFromOrMint((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address)",
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)",
          "updateAccount(uint256,address,address)",
          "getCreators(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "204",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "209",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "210",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:19"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "305",
              "type": "t_string_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:92"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "357",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:114"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721RaribleMinimal.sol:ERC721RaribleMinimal": {
        "src": "contracts/erc-721-minimal/ERC721RaribleMinimal.sol:10",
        "version": {
          "withMetadata": "d7f1fde40e6fe3305031144249bb39e814c11f477109359676c98c8b70b10212",
          "withoutMetadata": "71df619d8fb471c6f83e61edd9c543b758d36ed998f3102e4c912ff78a89ed07",
          "linkedWithoutMetadata": "71df619d8fb471c6f83e61edd9c543b758d36ed998f3102e4c912ff78a89ed07"
        },
        "inherit": [
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "contracts/IsPrivateCollection.sol:IsPrivateCollection",
          "contracts/erc-721-minimal/ERC721BaseMinimal.sol:ERC721BaseMinimal",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721-minimal/ERC721LazyMinimal.sol:ERC721LazyMinimal",
          "contracts/erc-721-minimal/ERC721URI.sol:ERC721URI",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:ERC721BurnableUpgradeableMinimal",
          "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal",
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC721RaribleUser_init(string,string,string,string,address[],address,address)",
          "__ERC721Rarible_init(string,string,string,string,address,address)",
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "254",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "256",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "257",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "258",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "260",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:19"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "456",
              "type": "t_string_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:92"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:114"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "558",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "559",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "608",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BaseMinimal",
              "src": "contracts/erc-721-minimal/ERC721BaseMinimal.sol:45"
            },
            {
              "label": "isPrivate",
              "offset": 0,
              "slot": "658",
              "type": "t_bool",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "659",
              "type": "t_array(t_uint256)49_storage",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:9"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "708",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "709",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721URI.sol:ERC721URI": {
        "src": "contracts/erc-721-minimal/ERC721URI.sol:15",
        "inherit": [
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "contracts/LibURI.sol:LibURI"
        ],
        "methods": [
          "baseURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:19"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal": {
        "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:18",
        "version": {
          "withMetadata": "abfc128fbe5ee2d48e10c474e5d071999a70de16f9e09a9245cfdeedbc2eddf4",
          "withoutMetadata": "b7f9991d5cb451a3b128bd78f1b6a66bbf8063051a30e4eec9f256f2b14b0774",
          "linkedWithoutMetadata": "b7f9991d5cb451a3b128bd78f1b6a66bbf8063051a30e4eec9f256f2b14b0774"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/erc-721-minimal-meta/ERC721RaribleMeta.sol:ERC721RaribleMeta": {
        "src": "contracts/erc-721-minimal/erc-721-minimal-meta/ERC721RaribleMeta.sol:11",
        "version": {
          "withMetadata": "216489a156bba51931b8d31850e038f93a47911ad966f5f3c9055da585a337ae",
          "withoutMetadata": "af6d8163831e96a85867637e1c737a7ec95b885b756ad273c4d4000b2d552958",
          "linkedWithoutMetadata": "af6d8163831e96a85867637e1c737a7ec95b885b756ad273c4d4000b2d552958"
        },
        "inherit": [
          "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:EIP712MetaTransaction",
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "contracts/IsPrivateCollection.sol:IsPrivateCollection",
          "contracts/erc-721-minimal/ERC721BaseMinimal.sol:ERC721BaseMinimal",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721-minimal/ERC721LazyMinimal.sol:ERC721LazyMinimal",
          "contracts/erc-721-minimal/ERC721URI.sol:ERC721URI",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:ERC721BurnableUpgradeableMinimal",
          "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal",
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC721RaribleUser_init(string,string,string,string,address[],address,address)",
          "__ERC721Rarible_init(string,string,string,string,address,address)",
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "254",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "256",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "257",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "258",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "260",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:19"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "456",
              "type": "t_string_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721URI",
              "src": "contracts/erc-721-minimal/ERC721URI.sol:92"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721LazyMinimal",
              "src": "contracts/erc-721-minimal/ERC721LazyMinimal.sol:114"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "558",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "559",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "608",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BaseMinimal",
              "src": "contracts/erc-721-minimal/ERC721BaseMinimal.sol:45"
            },
            {
              "label": "isPrivate",
              "offset": 0,
              "slot": "658",
              "type": "t_bool",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:7"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "659",
              "type": "t_array(t_uint256)49_storage",
              "contract": "IsPrivateCollection",
              "src": "contracts/IsPrivateCollection.sol:9"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "708",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "709",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "759",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EIP712MetaTransaction",
              "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:14"
            },
            {
              "label": "domainSeparator",
              "offset": 0,
              "slot": "760",
              "type": "t_bytes32",
              "contract": "EIP712MetaTransaction",
              "src": "@rarible/meta-tx/contracts/EIP712MetaTransaction.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Base.sol:ERC721Base": {
        "src": "contracts/erc-721/ERC721Base.sol:12",
        "inherit": [
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable",
          "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setBaseURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "152",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "156",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "157",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "159",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "160",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "161",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "302",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "303",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "506",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "507",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Base",
              "src": "contracts/erc-721/ERC721Base.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable": {
        "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:13",
        "inherit": [
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval": {
        "src": "contracts/erc-721/ERC721DefaultApproval.sol:7",
        "inherit": [
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy": {
        "src": "contracts/erc-721/ERC721Lazy.sol:12",
        "inherit": [
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint",
          "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981",
          "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "transferFromOrMint((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address)",
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)",
          "updateAccount(uint256,address,address)",
          "getCreators(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Rarible.sol:ERC721Rarible": {
        "src": "contracts/erc-721/ERC721Rarible.sol:8",
        "version": {
          "withMetadata": "9866182baae7baa553212ba5f2d209545c9abdded0911eadad6e36a7583e453f",
          "withoutMetadata": "3ebb4bfbdfb28399aed5a83312f789c875713204b188f4cc56325c316dd646b4",
          "linkedWithoutMetadata": "3ebb4bfbdfb28399aed5a83312f789c875713204b188f4cc56325c316dd646b4"
        },
        "inherit": [
          "contracts/erc-721/ERC721Base.sol:ERC721Base",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable",
          "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC721Rarible_init(string,string,string,string,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "152",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "156",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "157",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "159",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "160",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "161",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "302",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "303",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "506",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "507",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Base",
              "src": "contracts/erc-721/ERC721Base.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Rarible",
              "src": "contracts/erc-721/ERC721Rarible.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "contracts/erc-721/ERC721Upgradeable.sol:23",
        "version": {
          "withMetadata": "ddb00525e2abd32eb3d4f98179a34da0d07a339be9536b58296611986eca94b8",
          "withoutMetadata": "aa3f02d1e11d8fa139cc0c3cac606f56f79b5e40760637b869d4531030b85631",
          "linkedWithoutMetadata": "aa3f02d1e11d8fa139cc0c3cac606f56f79b5e40760637b869d4531030b85631"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "contracts/LibURI.sol:LibURI"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "baseURI()",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/TestRoyaltyV2981Calculate.sol:TestRoyaltyV2981Calculate": {
        "src": "test/contracts/TestRoyaltyV2981Calculate.sol:8",
        "version": {
          "withMetadata": "e7a814dfc220cc94210082c0b75e0eb6fbab25e55395eccbe9e1c0fa8c05c05c",
          "withoutMetadata": "b39e272f346d038e5a8ad7fbf1c58d16ae55ac7d2bfa8663add71ee685ec18a2",
          "linkedWithoutMetadata": "b39e272f346d038e5a8ad7fbf1c58d16ae55ac7d2bfa8663add71ee685ec18a2"
        },
        "inherit": [
          "contracts/erc-721/ERC721Base.sol:ERC721Base",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable",
          "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981"
        ],
        "methods": [
          "calculateRoyaltiesTest(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "152",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "156",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "157",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "159",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "160",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "161",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "302",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "303",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "506",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "507",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Base",
              "src": "contracts/erc-721/ERC721Base.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)4346_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)4346_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)4346_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/access/MinterAccessControlTestV1.sol:MinterAccessControlTestV1": {
        "src": "test/contracts/access/MinterAccessControlTestV1.sol:7",
        "version": {
          "withMetadata": "b00a0ffb7521d0e772446fd14e1a225403af0c014561969f3c60cd90fa0e254f",
          "withoutMetadata": "75e243b9eb128eaa0e74e388fc65434054355c8c0441a5e9942ae9cf186c2419",
          "linkedWithoutMetadata": "75e243b9eb128eaa0e74e388fc65434054355c8c0441a5e9942ae9cf186c2419"
        },
        "inherit": [
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControlTestV1",
              "src": "test/contracts/access/MinterAccessControlTestV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/access/MinterAccessControlTestV2.sol:MinterAccessControlTestV2": {
        "src": "test/contracts/access/MinterAccessControlTestV2.sol:7",
        "version": {
          "withMetadata": "8b4b36bb997a7cf33f37b51524bc7f2b8db010f034c7405d3a50cd1f47318f1d",
          "withoutMetadata": "6237088efb0dca45a1da427bd265830968a4cdeb4f9a560459a419e930c73585",
          "linkedWithoutMetadata": "6237088efb0dca45a1da427bd265830968a4cdeb4f9a560459a419e930c73585"
        },
        "inherit": [
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControlTestV2",
              "src": "test/contracts/access/MinterAccessControlTestV2.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-1155/ERC1155DefaultApprovalTest.sol:ERC1155DefaultApprovalTest": {
        "src": "test/contracts/erc-1155/ERC1155DefaultApprovalTest.sol:7",
        "version": {
          "withMetadata": "6444ff8ae30ec203af1aea3c0c71f2e759a1cc08fdfca8f89d711fb13d5f24fb",
          "withoutMetadata": "035d6e47c550b75b621d533c453fc106e77ce53cfdd384fe410ff5019ac54837",
          "linkedWithoutMetadata": "035d6e47c550b75b621d533c453fc106e77ce53cfdd384fe410ff5019ac54837"
        },
        "inherit": [
          "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval",
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC1155DefaultApprovalTest_init(string)",
          "mint(address,uint256,uint256)",
          "setDefaultApproval(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-1155/Mint1155ValidatorTest.sol:Mint1155ValidatorTest": {
        "src": "test/contracts/erc-1155/Mint1155ValidatorTest.sol:8",
        "version": {
          "withMetadata": "6fc83ce363dddd74a836feb59473768b32babfb6362ac436f545703e40190335",
          "withoutMetadata": "6d322fbf5cd7b80fbf715caeb09ecfe75aa1eea81ed081fb39ae38d4346a1450",
          "linkedWithoutMetadata": "6d322fbf5cd7b80fbf715caeb09ecfe75aa1eea81ed081fb39ae38d4346a1450"
        },
        "inherit": [
          "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint"
        ],
        "methods": [
          "__Mint1155ValidatorTest_init()",
          "validateTest(address,(uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-721/ERC721DefaultApprovalTest.sol:ERC721DefaultApprovalTest": {
        "src": "test/contracts/erc-721/ERC721DefaultApprovalTest.sol:7",
        "version": {
          "withMetadata": "39380ffd9461a74d85ce9a50dd32fdc2171ec24045d2f56d3dd6b97d972640a1",
          "withoutMetadata": "cd3ed87eca955f624ce579a359235d60692e09707d77c6522d9041318ea4c2c4",
          "linkedWithoutMetadata": "cd3ed87eca955f624ce579a359235d60692e09707d77c6522d9041318ea4c2c4"
        },
        "inherit": [
          "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal",
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC721DefaultApprovalTest_init(string,string)",
          "mint(address,uint256)",
          "setDefaultApproval(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-721/Mint721ValidatorTest.sol:Mint721ValidatorTest": {
        "src": "test/contracts/erc-721/Mint721ValidatorTest.sol:8",
        "version": {
          "withMetadata": "0413068101e623713c7fc1327a7fc27da8437552a71cb56ce45f583ac25bf322",
          "withoutMetadata": "4db0a6ba47c1f5d38553bd87031ac0ff6dcb0681fee0056272cb1b90151bf94b",
          "linkedWithoutMetadata": "4db0a6ba47c1f5d38553bd87031ac0ff6dcb0681fee0056272cb1b90151bf94b"
        },
        "inherit": [
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint"
        ],
        "methods": [
          "__Mint721ValidatorTest_init()",
          "validateTest((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "contracts/Migrations.sol:Migrations": {
        "src": "contracts/Migrations.sol:5",
        "version": {
          "withMetadata": "506b6aafaed6c1ac7bea28250ee8cd74d85c45aed835530b5a8a1f03515c87dd",
          "withoutMetadata": "5e9a930d422fc2cdb9120658e99d215c882773554764e974cf2cac295f8bfb2c",
          "linkedWithoutMetadata": "5e9a930d422fc2cdb9120658e99d215c882773554764e974cf2cac295f8bfb2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts/Migrations.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts/Migrations.sol:6"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts/Migrations.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:18",
        "version": {
          "withMetadata": "e40a047d02568e4b09dc42878e7cb030c4836e31e9ce9e7f5442d6bf8db99aa6",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:ERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155ReceiverUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "7d6a811c59c82701d72d6870ca95440d0a136dde39f17c6c6c3b7add1f2cb935",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:29",
        "version": {
          "withMetadata": "d68f951d9afd4de07d2fdd2e0108453795f3e7a7297394e08046c15e2111cdbc",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:29",
        "version": {
          "withMetadata": "8087312fefba91d77326158d394f177f8e2cf096b704b39e48a0c58120c4cddf",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "13ec13ddac86cccdf66d6835d3771e31048341c79ceacac06809adc6a72cb484",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/exchange-interfaces/contracts/INftTransferProxy.sol:INftTransferProxy": {
        "src": "@rarible/exchange-interfaces/contracts/INftTransferProxy.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "erc721safeTransferFrom(address,address,address,uint256)",
          "erc1155safeTransferFrom(address,address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:ITransferProxy": {
        "src": "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(((bytes4,bytes),uint256),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:IERC1155LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-1155/IERC1155LazyMint.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintAndTransfer((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,uint256)",
          "transferFromOrMint((uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:7",
        "version": {
          "withMetadata": "22e6182aa2fb238bd994c9f6436ee2d3a0a5e3faafc17a3ec0116a95722e2237",
          "withoutMetadata": "2b89d368bf32c4b81e7fbdff642262d8c1e722d11215d2239ac8e010aabb7fe4",
          "linkedWithoutMetadata": "2b89d368bf32c4b81e7fbdff642262d8c1e722d11215d2239ac8e010aabb7fe4"
        },
        "inherit": [],
        "libraries": [
          "@rarible/lib-part/contracts/LibPart.sol:LibPart"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)",
          "transferFromOrMint((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint": {
        "src": "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:7",
        "version": {
          "withMetadata": "5bca8f8a8f42f6cae8f517f908c17214515a615824ff113d821bc5b5ea0de192",
          "withoutMetadata": "ff8a4ea15021081b0afd60fb97a28e84e53c402c2f0c6d78953e1c6c52cc5d96",
          "linkedWithoutMetadata": "ff8a4ea15021081b0afd60fb97a28e84e53c402c2f0c6d78953e1c6c52cc5d96"
        },
        "inherit": [],
        "libraries": [
          "@rarible/lib-part/contracts/LibPart.sol:LibPart"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/test/contracts/ERC1155LazyMintTransferProxyTest.sol:ERC1155LazyMintTransferProxyTest": {
        "src": "@rarible/lazy-mint/test/contracts/ERC1155LazyMintTransferProxyTest.sol:11",
        "version": {
          "withMetadata": "e5a3d18f2f250c4ab1ed29d58eacdec64e07c3c25d8d5a1ed5cf78a671b4a5df",
          "withoutMetadata": "d3f5b502708640f8378018a2a5570b16e1a1bb76f24ff1105eec92f76082ac5e",
          "linkedWithoutMetadata": "d3f5b502708640f8378018a2a5570b16e1a1bb76f24ff1105eec92f76082ac5e"
        },
        "inherit": [
          "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:ITransferProxy",
          "@rarible/role-operator/contracts/OperatorRole.sol:OperatorRole",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint"
        ],
        "methods": [
          "transfer(((bytes4,bytes),uint256),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OperatorRole",
              "src": "@rarible/role-operator/contracts/OperatorRole.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lazy-mint/test/contracts/ERC721LazyMintTransferProxyTest.sol:ERC721LazyMintTransferProxyTest": {
        "src": "@rarible/lazy-mint/test/contracts/ERC721LazyMintTransferProxyTest.sol:11",
        "version": {
          "withMetadata": "f2ed70760e7c14d8bcaf7c19973ff28be006f7429776217c70e6390efa244a68",
          "withoutMetadata": "0e15626e84ac785c0cc7d723b877395056362026cac9dcb5169ebe6a49cf95db",
          "linkedWithoutMetadata": "0e15626e84ac785c0cc7d723b877395056362026cac9dcb5169ebe6a49cf95db"
        },
        "inherit": [
          "@rarible/exchange-interfaces/contracts/ITransferProxy.sol:ITransferProxy",
          "@rarible/role-operator/contracts/OperatorRole.sol:OperatorRole",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint"
        ],
        "methods": [
          "transfer(((bytes4,bytes),uint256),address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OperatorRole",
              "src": "@rarible/role-operator/contracts/OperatorRole.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-asset/contracts/LibAsset.sol:LibAsset": {
        "src": "@rarible/lib-asset/contracts/LibAsset.sol:5",
        "version": {
          "withMetadata": "f46effe98e0ac958ceeee44d3f69c1a340eb9877d76c0b64562ded0dd6cac256",
          "withoutMetadata": "dfb2a20d76dd998f1f9d004105cda0afc5b404d275243058a631d6456a85ec02",
          "linkedWithoutMetadata": "dfb2a20d76dd998f1f9d004105cda0afc5b404d275243058a631d6456a85ec02"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-part/contracts/LibPart.sol:LibPart": {
        "src": "@rarible/lib-part/contracts/LibPart.sol:5",
        "version": {
          "withMetadata": "1e15b904046cd0ace63b43061c288583efbada2020af59ab16c20aa684bd553e",
          "withoutMetadata": "cf9a2784efad9e0204aae8177c738952b8e0ef9678c42c6202ab3384327ad817",
          "linkedWithoutMetadata": "cf9a2784efad9e0204aae8177c738952b8e0ef9678c42c6202ab3384327ad817"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-signature/contracts/ERC1271.sol:ERC1271": {
        "src": "@rarible/lib-signature/contracts/ERC1271.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-signature/contracts/LibSignature.sol:LibSignature": {
        "src": "@rarible/lib-signature/contracts/LibSignature.sol:5",
        "version": {
          "withMetadata": "b05a77a09d32863a8f847506c260d10c891a1ed820591e4d2505b67a6155f15d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/lib-signature/test/contracts/TestERC1271.sol:TestERC1271": {
        "src": "@rarible/lib-signature/test/contracts/TestERC1271.sol:7",
        "version": {
          "withMetadata": "9b4d31b705e2a97be5adcd0c868342b87dd8cb317492dade8029f75a44a47a63",
          "withoutMetadata": "8bf1744df9fcfeb50e4bbeb5744f73a9683d84ef957223e79a71207f7ddb9fe1",
          "linkedWithoutMetadata": "8bf1744df9fcfeb50e4bbeb5744f73a9683d84ef957223e79a71207f7ddb9fe1"
        },
        "inherit": [
          "@rarible/lib-signature/contracts/ERC1271.sol:ERC1271"
        ],
        "libraries": [],
        "methods": [
          "setReturnSuccessfulValidSignature(bool)",
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "returnSuccessfulValidSignature",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "TestERC1271",
              "src": "@rarible/lib-signature/test/contracts/TestERC1271.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/role-operator/contracts/OperatorRole.sol:OperatorRole": {
        "src": "@rarible/role-operator/contracts/OperatorRole.sol:7",
        "version": {
          "withMetadata": "ab8aa34dd7bc65f0fee0e1b62aa6a6078dd284ae99df1fe7838ddf8297d9bc5c",
          "withoutMetadata": "e9bd0f4834d90b5c8dd439c1b8750166749e13a1fa934843ba7450c902aa42fc",
          "linkedWithoutMetadata": "e9bd0f4834d90b5c8dd439c1b8750166749e13a1fa934843ba7450c902aa42fc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__OperatorRole_init()",
          "addOperator(address)",
          "removeOperator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OperatorRole",
              "src": "@rarible/role-operator/contracts/OperatorRole.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable": {
        "src": "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:10",
        "inherit": [
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/IERC2981.sol:IERC2981": {
        "src": "@rarible/royalties/contracts/IERC2981.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981": {
        "src": "@rarible/royalties/contracts/LibRoyalties2981.sol:7",
        "version": {
          "withMetadata": "5e91a4e0643c29a618703bc15f59ecbd0fba5a1c2805070319238c12b50d4850",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2": {
        "src": "@rarible/royalties/contracts/LibRoyaltiesV2.sol:5",
        "version": {
          "withMetadata": "11b652e8e75fec691a455ebe543c8c6cde6b203d5e0f3f965d8be82f832ae4f2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2": {
        "src": "@rarible/royalties/contracts/RoyaltiesV2.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRaribleV2Royalties(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties": {
        "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "royalties",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)3306_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_struct(Part)3306_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl": {
        "src": "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:11",
        "version": {
          "withMetadata": "9a74dbcc826062979335908aa7cbac18d407bfb6e742ea3cdeb4555b5bff99b4",
          "withoutMetadata": "8f687c8c5ae8cb68d6b54f7b3d9640d8d3623c5a37d3c9f3d6f8e2c0fdbc968b",
          "linkedWithoutMetadata": "8f687c8c5ae8cb68d6b54f7b3d9640d8d3623c5a37d3c9f3d6f8e2c0fdbc968b"
        },
        "inherit": [
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties"
        ],
        "libraries": [],
        "methods": [
          "getRaribleV2Royalties(uint256)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "royalties",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Part)3306_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_struct(Part)3306_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@rarible/transfer-proxy/test/contracts/TransferProxyTest.sol:TransferProxyTest": {
        "src": "@rarible/transfer-proxy/test/contracts/TransferProxyTest.sol:7",
        "version": {
          "withMetadata": "5d1184ff386f82de81b4e4b40ca78780da6054f0878f15a17c97610c945c4210",
          "withoutMetadata": "a43c4f5300d6387987b2c0861c43c1c6b92be4feda7110f27a2c5b767e012547",
          "linkedWithoutMetadata": "a43c4f5300d6387987b2c0861c43c1c6b92be4feda7110f27a2c5b767e012547"
        },
        "inherit": [
          "@rarible/exchange-interfaces/contracts/INftTransferProxy.sol:INftTransferProxy"
        ],
        "libraries": [],
        "methods": [
          "erc721safeTransferFrom(address,address,address,uint256)",
          "erc1155safeTransferFrom(address,address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/HasContractURI.sol:HasContractURI": {
        "src": "contracts/HasContractURI.sol:7",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "51",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/LibURI.sol:LibURI": {
        "src": "contracts/LibURI.sol:5",
        "version": {
          "withMetadata": "721f1f35d146919bc5db86d7c3b71ef97643dd952c209b1841fd5a91f9fc7c25",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/Mint721Validator.sol:Mint721Validator": {
        "src": "contracts/Mint721Validator.sol:8",
        "version": {
          "withMetadata": "9687cccdf73bdc9081946a35a9d9da8cbccbd8eb444da17b5047b6c2c79a6e45",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/access/MinterAccessControl.sol:MinterAccessControl": {
        "src": "contracts/access/MinterAccessControl.sol:7",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "addMinter(address)",
          "addMinters(address[])",
          "removeMinter(address)",
          "isMinter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval": {
        "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:7",
        "inherit": [
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable": {
        "src": "contracts/erc-1155/ERC1155Upgradeable.sol:22",
        "version": {
          "withMetadata": "0f0b372eb26bdacdfd8009fc7cc8bb38d21d5f2d21fc7d1dd34ea64b433dd55d",
          "withoutMetadata": "d66db392f7d1640635900c859aea3c33cf6aa7f59e7fe151679e4eeef3d2b881",
          "linkedWithoutMetadata": "d66db392f7d1640635900c859aea3c33cf6aa7f59e7fe151679e4eeef3d2b881"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator": {
        "src": "contracts/erc-1155/Mint1155Validator.sol:8",
        "version": {
          "withMetadata": "c198cfbee258a57445ad7817ccdce58eb070291e4e495bd15920565f9687df4c",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator": {
        "src": "contracts/erc-1271/ERC1271Validator.sol:9",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@rarible/lib-signature/contracts/LibSignature.sol:LibSignature"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal": {
        "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:7",
        "inherit": [
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal": {
        "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:18",
        "version": {
          "withMetadata": "abfc128fbe5ee2d48e10c474e5d071999a70de16f9e09a9245cfdeedbc2eddf4",
          "withoutMetadata": "b7f9991d5cb451a3b128bd78f1b6a66bbf8063051a30e4eec9f256f2b14b0774",
          "linkedWithoutMetadata": "b7f9991d5cb451a3b128bd78f1b6a66bbf8063051a30e4eec9f256f2b14b0774"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Base.sol:ERC721Base": {
        "src": "contracts/erc-721/ERC721Base.sol:12",
        "inherit": [
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable",
          "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setBaseURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "152",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "156",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "157",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "159",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "160",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "161",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "302",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "303",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "506",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "507",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Base",
              "src": "contracts/erc-721/ERC721Base.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)3306_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)3306_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable": {
        "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:13",
        "inherit": [
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval": {
        "src": "contracts/erc-721/ERC721DefaultApproval.sol:7",
        "inherit": [
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy": {
        "src": "contracts/erc-721/ERC721Lazy.sol:12",
        "inherit": [
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint",
          "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981",
          "@rarible/royalties/contracts/LibRoyaltiesV2.sol:LibRoyaltiesV2"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "transferFromOrMint((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address,address)",
          "mintAndTransfer((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),address)",
          "updateAccount(uint256,address,address)",
          "getCreators(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)3306_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)3306_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "contracts/erc-721/ERC721Upgradeable.sol:23",
        "version": {
          "withMetadata": "ddb00525e2abd32eb3d4f98179a34da0d07a339be9536b58296611986eca94b8",
          "withoutMetadata": "aa3f02d1e11d8fa139cc0c3cac606f56f79b5e40760637b869d4531030b85631",
          "linkedWithoutMetadata": "aa3f02d1e11d8fa139cc0c3cac606f56f79b5e40760637b869d4531030b85631"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "contracts/LibURI.sol:LibURI"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "baseURI()",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "111",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/TestRoyaltyV2981Calculate.sol:TestRoyaltyV2981Calculate": {
        "src": "test/contracts/TestRoyaltyV2981Calculate.sol:8",
        "version": {
          "withMetadata": "e7a814dfc220cc94210082c0b75e0eb6fbab25e55395eccbe9e1c0fa8c05c05c",
          "withoutMetadata": "b39e272f346d038e5a8ad7fbf1c58d16ae55ac7d2bfa8663add71ee685ec18a2",
          "linkedWithoutMetadata": "b39e272f346d038e5a8ad7fbf1c58d16ae55ac7d2bfa8663add71ee685ec18a2"
        },
        "inherit": [
          "contracts/erc-721/ERC721Base.sol:ERC721Base",
          "contracts/HasContractURI.sol:HasContractURI",
          "contracts/erc-721/ERC721Lazy.sol:ERC721Lazy",
          "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol:RoyaltiesV2Impl",
          "@rarible/royalties/contracts/IERC2981.sol:IERC2981",
          "@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol:RoyaltiesV2Upgradeable",
          "@rarible/royalties/contracts/RoyaltiesV2.sol:RoyaltiesV2",
          "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:AbstractRoyalties",
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "contracts/erc-721/ERC721BurnableUpgradeable.sol:ERC721BurnableUpgradeable",
          "contracts/erc-721/ERC721DefaultApproval.sol:ERC721DefaultApproval",
          "contracts/erc-721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol:IERC721LazyMint",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/royalties/contracts/LibRoyalties2981.sol:LibRoyalties2981"
        ],
        "methods": [
          "calculateRoyaltiesTest(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_struct(UintSet)2469_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:35"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "152",
              "type": "t_struct(UintToAddressMap)1846_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:38"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:41"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "156",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:47"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "157",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:50"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "158",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:53"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "159",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:56"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "160",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:93"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "161",
              "type": "t_array(t_uint256)40_storage",
              "contract": "ERC721Upgradeable",
              "src": "contracts/erc-721/ERC721Upgradeable.sol:495"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApproval",
              "src": "contracts/erc-721/ERC721DefaultApproval.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "302",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "303",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "354",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "404",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            },
            {
              "label": "royalties",
              "offset": 0,
              "slot": "454",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "AbstractRoyalties",
              "src": "@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
            },
            {
              "label": "creators",
              "offset": 0,
              "slot": "455",
              "type": "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "456",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Lazy",
              "src": "contracts/erc-721/ERC721Lazy.sol:116"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "506",
              "type": "t_string_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "507",
              "type": "t_array(t_uint256)49_storage",
              "contract": "HasContractURI",
              "src": "contracts/HasContractURI.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721Base",
              "src": "contracts/erc-721/ERC721Base.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1520_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Part)3306_storage)dyn_storage": {
              "label": "struct LibPart.Part[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)40_storage": {
              "label": "uint256[40]",
              "numberOfBytes": "1280"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2469_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(Part)3306_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct LibPart.Part[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1528_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1520_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1520_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Part)3306_storage": {
              "label": "struct LibPart.Part",
              "members": [
                {
                  "label": "account",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)2083_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2469_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2083_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)1846_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1528_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/access/MinterAccessControlTestV1.sol:MinterAccessControlTestV1": {
        "src": "test/contracts/access/MinterAccessControlTestV1.sol:7",
        "version": {
          "withMetadata": "b00a0ffb7521d0e772446fd14e1a225403af0c014561969f3c60cd90fa0e254f",
          "withoutMetadata": "75e243b9eb128eaa0e74e388fc65434054355c8c0441a5e9942ae9cf186c2419",
          "linkedWithoutMetadata": "75e243b9eb128eaa0e74e388fc65434054355c8c0441a5e9942ae9cf186c2419"
        },
        "inherit": [
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControlTestV1",
              "src": "test/contracts/access/MinterAccessControlTestV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/access/MinterAccessControlTestV2.sol:MinterAccessControlTestV2": {
        "src": "test/contracts/access/MinterAccessControlTestV2.sol:7",
        "version": {
          "withMetadata": "8b4b36bb997a7cf33f37b51524bc7f2b8db010f034c7405d3a50cd1f47318f1d",
          "withoutMetadata": "6237088efb0dca45a1da427bd265830968a4cdeb4f9a560459a419e930c73585",
          "linkedWithoutMetadata": "6237088efb0dca45a1da427bd265830968a4cdeb4f9a560459a419e930c73585"
        },
        "inherit": [
          "contracts/access/MinterAccessControl.sol:MinterAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            },
            {
              "label": "_minters",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControl",
              "src": "contracts/access/MinterAccessControl.sol:54"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MinterAccessControlTestV2",
              "src": "test/contracts/access/MinterAccessControlTestV2.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-1155/ERC1155DefaultApprovalTest.sol:ERC1155DefaultApprovalTest": {
        "src": "test/contracts/erc-1155/ERC1155DefaultApprovalTest.sol:7",
        "version": {
          "withMetadata": "6444ff8ae30ec203af1aea3c0c71f2e759a1cc08fdfca8f89d711fb13d5f24fb",
          "withoutMetadata": "035d6e47c550b75b621d533c453fc106e77ce53cfdd384fe410ff5019ac54837",
          "linkedWithoutMetadata": "035d6e47c550b75b621d533c453fc106e77ce53cfdd384fe410ff5019ac54837"
        },
        "inherit": [
          "contracts/erc-1155/ERC1155DefaultApproval.sol:ERC1155DefaultApproval",
          "contracts/erc-1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC1155DefaultApprovalTest_init(string)",
          "mint(address,uint256,uint256)",
          "setDefaultApproval(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:30"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "contracts/erc-1155/ERC1155Upgradeable.sol:421"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1155DefaultApproval",
              "src": "contracts/erc-1155/ERC1155DefaultApproval.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-1155/Mint1155ValidatorTest.sol:Mint1155ValidatorTest": {
        "src": "test/contracts/erc-1155/Mint1155ValidatorTest.sol:8",
        "version": {
          "withMetadata": "6fc83ce363dddd74a836feb59473768b32babfb6362ac436f545703e40190335",
          "withoutMetadata": "6d322fbf5cd7b80fbf715caeb09ecfe75aa1eea81ed081fb39ae38d4346a1450",
          "linkedWithoutMetadata": "6d322fbf5cd7b80fbf715caeb09ecfe75aa1eea81ed081fb39ae38d4346a1450"
        },
        "inherit": [
          "contracts/erc-1155/Mint1155Validator.sol:Mint1155Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint.sol:LibERC1155LazyMint"
        ],
        "methods": [
          "__Mint1155ValidatorTest_init()",
          "validateTest(address,(uint256,string,uint256,struct LibPart.Part[],struct LibPart.Part[],bytes[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint1155Validator",
              "src": "contracts/erc-1155/Mint1155Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-721/ERC721DefaultApprovalTest.sol:ERC721DefaultApprovalTest": {
        "src": "test/contracts/erc-721/ERC721DefaultApprovalTest.sol:7",
        "version": {
          "withMetadata": "39380ffd9461a74d85ce9a50dd32fdc2171ec24045d2f56d3dd6b97d972640a1",
          "withoutMetadata": "cd3ed87eca955f624ce579a359235d60692e09707d77c6522d9041318ea4c2c4",
          "linkedWithoutMetadata": "cd3ed87eca955f624ce579a359235d60692e09707d77c6522d9041318ea4c2c4"
        },
        "inherit": [
          "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:ERC721DefaultApprovalMinimal",
          "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:ERC721UpgradeableMinimal",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "__ERC721DefaultApprovalTest_init(string,string)",
          "mint(address,uint256)",
          "setDefaultApproval(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:29"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:32"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:35"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:38"
            },
            {
              "label": "_burnedTokens",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "108",
              "type": "t_array(t_uint256)43_storage",
              "contract": "ERC721UpgradeableMinimal",
              "src": "contracts/erc-721-minimal/ERC721UpgradeableMinimal.sol:443"
            },
            {
              "label": "defaultApprovals",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721DefaultApprovalMinimal",
              "src": "contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)43_storage": {
              "label": "uint256[43]",
              "numberOfBytes": "1376"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "test/contracts/erc-721/Mint721ValidatorTest.sol:Mint721ValidatorTest": {
        "src": "test/contracts/erc-721/Mint721ValidatorTest.sol:8",
        "version": {
          "withMetadata": "0413068101e623713c7fc1327a7fc27da8437552a71cb56ce45f583ac25bf322",
          "withoutMetadata": "4db0a6ba47c1f5d38553bd87031ac0ff6dcb0681fee0056272cb1b90151bf94b",
          "linkedWithoutMetadata": "4db0a6ba47c1f5d38553bd87031ac0ff6dcb0681fee0056272cb1b90151bf94b"
        },
        "inherit": [
          "contracts/Mint721Validator.sol:Mint721Validator",
          "contracts/erc-1271/ERC1271Validator.sol:ERC1271Validator",
          "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:EIP712Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol:LibERC721LazyMint"
        ],
        "methods": [
          "__Mint721ValidatorTest_init()",
          "validateTest((uint256,string,struct LibPart.Part[],struct LibPart.Part[],bytes[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1271Validator",
              "src": "contracts/erc-1271/ERC1271Validator.sol:34"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Mint721Validator",
              "src": "contracts/Mint721Validator.sol:16"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    }
  ]
}