/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeableBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableBeacon__factory>;
    getContractFactory(
      name: "INftTransferProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INftTransferProxy__factory>;
    getContractFactory(
      name: "ITransferProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransferProxy__factory>;
    getContractFactory(
      name: "IERC1155LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155LazyMint__factory>;
    getContractFactory(
      name: "LibERC1155LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC1155LazyMint__factory>;
    getContractFactory(
      name: "IERC721LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721LazyMint__factory>;
    getContractFactory(
      name: "LibERC721LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC721LazyMint__factory>;
    getContractFactory(
      name: "ERC1155LazyMintTransferProxyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155LazyMintTransferProxyTest__factory>;
    getContractFactory(
      name: "ERC721LazyMintTransferProxyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721LazyMintTransferProxyTest__factory>;
    getContractFactory(
      name: "LibAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibAsset__factory>;
    getContractFactory(
      name: "LibPart",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibPart__factory>;
    getContractFactory(
      name: "ERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271__factory>;
    getContractFactory(
      name: "TestERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC1271__factory>;
    getContractFactory(
      name: "EIP712MetaTransaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712MetaTransaction__factory>;
    getContractFactory(
      name: "OperatorRole",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorRole__factory>;
    getContractFactory(
      name: "RoyaltiesV2Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV2Upgradeable__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "RoyaltiesV2Impl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV2Impl__factory>;
    getContractFactory(
      name: "RoyaltiesV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV2__factory>;
    getContractFactory(
      name: "TransferProxyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferProxyTest__factory>;
    getContractFactory(
      name: "MinterAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterAccessControl__factory>;
    getContractFactory(
      name: "ERC1155RaribleBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155RaribleBeacon__factory>;
    getContractFactory(
      name: "ERC1155RaribleBeaconMeta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155RaribleBeaconMeta__factory>;
    getContractFactory(
      name: "ERC721RaribleBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RaribleBeacon__factory>;
    getContractFactory(
      name: "ERC721RaribleMinimalBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RaribleMinimalBeacon__factory>;
    getContractFactory(
      name: "ERC721RaribleMinimalBeaconMeta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RaribleMinimalBeaconMeta__factory>;
    getContractFactory(
      name: "ERC1155RaribleFactoryC2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155RaribleFactoryC2__factory>;
    getContractFactory(
      name: "ERC721RaribleFactoryC2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RaribleFactoryC2__factory>;
    getContractFactory(
      name: "ERC1155RaribleMeta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155RaribleMeta__factory>;
    getContractFactory(
      name: "ERC1155Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Base__factory>;
    getContractFactory(
      name: "ERC1155BaseURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BaseURI__factory>;
    getContractFactory(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155DefaultApproval",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155DefaultApproval__factory>;
    getContractFactory(
      name: "ERC1155Lazy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Lazy__factory>;
    getContractFactory(
      name: "ERC1155Rarible",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Rarible__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC721RaribleMeta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RaribleMeta__factory>;
    getContractFactory(
      name: "ERC721BaseMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BaseMinimal__factory>;
    getContractFactory(
      name: "ERC721BurnableUpgradeableMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableUpgradeableMinimal__factory>;
    getContractFactory(
      name: "ERC721DefaultApprovalMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721DefaultApprovalMinimal__factory>;
    getContractFactory(
      name: "ERC721LazyMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721LazyMinimal__factory>;
    getContractFactory(
      name: "ERC721RaribleMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RaribleMinimal__factory>;
    getContractFactory(
      name: "ERC721UpgradeableMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721UpgradeableMinimal__factory>;
    getContractFactory(
      name: "ERC721URI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URI__factory>;
    getContractFactory(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: "ERC721BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721DefaultApproval",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721DefaultApproval__factory>;
    getContractFactory(
      name: "ERC721Lazy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Lazy__factory>;
    getContractFactory(
      name: "ERC721Rarible",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Rarible__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "HasContractURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HasContractURI__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "MinterAccessControlTestV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterAccessControlTestV1__factory>;
    getContractFactory(
      name: "MinterAccessControlTestV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterAccessControlTestV2__factory>;
    getContractFactory(
      name: "ERC1155DefaultApprovalTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155DefaultApprovalTest__factory>;
    getContractFactory(
      name: "Mint1155ValidatorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mint1155ValidatorTest__factory>;
    getContractFactory(
      name: "ERC721DefaultApprovalTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721DefaultApprovalTest__factory>;
    getContractFactory(
      name: "Mint721ValidatorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mint721ValidatorTest__factory>;
    getContractFactory(
      name: "TestRoyaltyV2981Calculate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRoyaltyV2981Calculate__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "ERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "BeaconProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeableBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableBeacon>;
    getContractAt(
      name: "INftTransferProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INftTransferProxy>;
    getContractAt(
      name: "ITransferProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransferProxy>;
    getContractAt(
      name: "IERC1155LazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155LazyMint>;
    getContractAt(
      name: "LibERC1155LazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC1155LazyMint>;
    getContractAt(
      name: "IERC721LazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721LazyMint>;
    getContractAt(
      name: "LibERC721LazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC721LazyMint>;
    getContractAt(
      name: "ERC1155LazyMintTransferProxyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155LazyMintTransferProxyTest>;
    getContractAt(
      name: "ERC721LazyMintTransferProxyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721LazyMintTransferProxyTest>;
    getContractAt(
      name: "LibAsset",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibAsset>;
    getContractAt(
      name: "LibPart",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibPart>;
    getContractAt(
      name: "ERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271>;
    getContractAt(
      name: "TestERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC1271>;
    getContractAt(
      name: "EIP712MetaTransaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712MetaTransaction>;
    getContractAt(
      name: "OperatorRole",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorRole>;
    getContractAt(
      name: "RoyaltiesV2Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltiesV2Upgradeable>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "RoyaltiesV2Impl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltiesV2Impl>;
    getContractAt(
      name: "RoyaltiesV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltiesV2>;
    getContractAt(
      name: "TransferProxyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferProxyTest>;
    getContractAt(
      name: "MinterAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterAccessControl>;
    getContractAt(
      name: "ERC1155RaribleBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155RaribleBeacon>;
    getContractAt(
      name: "ERC1155RaribleBeaconMeta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155RaribleBeaconMeta>;
    getContractAt(
      name: "ERC721RaribleBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RaribleBeacon>;
    getContractAt(
      name: "ERC721RaribleMinimalBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RaribleMinimalBeacon>;
    getContractAt(
      name: "ERC721RaribleMinimalBeaconMeta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RaribleMinimalBeaconMeta>;
    getContractAt(
      name: "ERC1155RaribleFactoryC2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155RaribleFactoryC2>;
    getContractAt(
      name: "ERC721RaribleFactoryC2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RaribleFactoryC2>;
    getContractAt(
      name: "ERC1155RaribleMeta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155RaribleMeta>;
    getContractAt(
      name: "ERC1155Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Base>;
    getContractAt(
      name: "ERC1155BaseURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BaseURI>;
    getContractAt(
      name: "ERC1155BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    getContractAt(
      name: "ERC1155DefaultApproval",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155DefaultApproval>;
    getContractAt(
      name: "ERC1155Lazy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Lazy>;
    getContractAt(
      name: "ERC1155Rarible",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Rarible>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "ERC721RaribleMeta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RaribleMeta>;
    getContractAt(
      name: "ERC721BaseMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BaseMinimal>;
    getContractAt(
      name: "ERC721BurnableUpgradeableMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableUpgradeableMinimal>;
    getContractAt(
      name: "ERC721DefaultApprovalMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721DefaultApprovalMinimal>;
    getContractAt(
      name: "ERC721LazyMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721LazyMinimal>;
    getContractAt(
      name: "ERC721RaribleMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RaribleMinimal>;
    getContractAt(
      name: "ERC721UpgradeableMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721UpgradeableMinimal>;
    getContractAt(
      name: "ERC721URI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URI>;
    getContractAt(
      name: "ERC721Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: "ERC721BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    getContractAt(
      name: "ERC721DefaultApproval",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721DefaultApproval>;
    getContractAt(
      name: "ERC721Lazy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Lazy>;
    getContractAt(
      name: "ERC721Rarible",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Rarible>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "HasContractURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HasContractURI>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "MinterAccessControlTestV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterAccessControlTestV1>;
    getContractAt(
      name: "MinterAccessControlTestV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterAccessControlTestV2>;
    getContractAt(
      name: "ERC1155DefaultApprovalTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155DefaultApprovalTest>;
    getContractAt(
      name: "Mint1155ValidatorTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mint1155ValidatorTest>;
    getContractAt(
      name: "ERC721DefaultApprovalTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721DefaultApprovalTest>;
    getContractAt(
      name: "Mint721ValidatorTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mint721ValidatorTest>;
    getContractAt(
      name: "TestRoyaltyV2981Calculate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRoyaltyV2981Calculate>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
