/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LibAsset,
  LibAssetInterface,
} from "../../../../@rarible/lib-asset/contracts/LibAsset";

const _abi = [
  {
    inputs: [],
    name: "COLLECTION",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CRYPTO_PUNKS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC1155_ASSET_CLASS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC20_ASSET_CLASS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721_ASSET_CLASS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETH_ASSET_CLASS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101cc610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80631d32813614610071578063405bf27514610096578063697b23651461009e5780636cd2c30a146100a6578063b4797da2146100ae578063c214be59146100b6575b600080fd5b6100796100be565b604080516001600160e01b03199092168252519081900360200190f35b6100796100e2565b610079610106565b61007961012a565b61007961014e565b610079610172565b7f3e6b89d41ae6cce5def8a4064ada8dba77d057c7a0113741d26b5e4eccdd2a7e81565b7f973bb64086f173ec8099b7ed3d43da984f4a332e4417a08bc6a286e6402b058681565b7ff63c282591b950c64511498574d1cdfa76078b63dbcad6d06139d12d140b61cb81565b7f8ae85d849167ff996c04040c44924fd364217285e4cad818292c7ac37c0a345b81565b7faaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff481565b7f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a8156fea26469706673582212207a9feda492d26a68f31243aeb2ba347109489d7f8daf78bc28a3f1c20ce3d0ea64736f6c63430007060033";

type LibAssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibAssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibAsset__factory extends ContractFactory {
  constructor(...args: LibAssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibAsset> {
    return super.deploy(overrides || {}) as Promise<LibAsset>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibAsset {
    return super.attach(address) as LibAsset;
  }
  override connect(signer: Signer): LibAsset__factory {
    return super.connect(signer) as LibAsset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetInterface {
    return new utils.Interface(_abi) as LibAssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAsset {
    return new Contract(address, _abi, signerOrProvider) as LibAsset;
  }
}
