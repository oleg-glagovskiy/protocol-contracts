/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  LibERC1155LazyMint,
  LibERC1155LazyMintInterface,
} from "../../../../../@rarible/lazy-mint/contracts/erc-1155/LibERC1155LazyMint";

const _abi = [
  {
    inputs: [],
    name: "ERC1155_LAZY_ASSET_CLASS",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_AND_TRANSFER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60fb610025600b82828239805160001a60731461001857fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80637987105f14604257806390c20c4314605a575b600080fd5b6048607d565b60408051918252519081900360200190f35b606060a1565b604080516001600160e01b03199092168252519081900360200190f35b7ffb988707ebb338694f318760b0fd5cfe756d00a2ade251fda110b80c336a3c7f81565b7f1cdfaa400bc064c91b5cc20e571cfcc92103980be96e01fb36dda1962d8d78cb8156fea2646970667358221220fda8996ff851f2ed5b1955b2db4fabe9eb2a00f2713ef4fe9f23e14c302a767064736f6c63430007060033";

type LibERC1155LazyMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibERC1155LazyMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibERC1155LazyMint__factory extends ContractFactory {
  constructor(...args: LibERC1155LazyMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibERC1155LazyMint> {
    return super.deploy(overrides || {}) as Promise<LibERC1155LazyMint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibERC1155LazyMint {
    return super.attach(address) as LibERC1155LazyMint;
  }
  override connect(signer: Signer): LibERC1155LazyMint__factory {
    return super.connect(signer) as LibERC1155LazyMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibERC1155LazyMintInterface {
    return new utils.Interface(_abi) as LibERC1155LazyMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibERC1155LazyMint {
    return new Contract(address, _abi, signerOrProvider) as LibERC1155LazyMint;
  }
}
