/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721DefaultApprovalTest,
  ERC721DefaultApprovalTestInterface,
} from "../../../../test/contracts/erc-721/ERC721DefaultApprovalTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasApproval",
        type: "bool",
      },
    ],
    name: "DefaultApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "__ERC721DefaultApprovalTest_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "hasApproval",
        type: "bool",
      },
    ],
    name: "setDefaultApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611841806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610474578063b88d4fde146104a2578063c87b56dd14610568578063e985e9c51461058557610100565b806342842e0e146103e15780636352211e1461041757806370a082311461043457806395d89b411461046c57610100565b806318054c37116100d357806318054c371461022457806323b872dd146102525780633de01de01461028857806340c10f19146103b557610100565b806301ffc9a71461010557806306fdde0314610140578063081812fc146101bd578063095ea7b3146101f6575b600080fd5b61012c6004803603602081101561011b57600080fd5b50356001600160e01b0319166105b3565b604080519115158252519081900360200190f35b6101486105d2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018257818101518382015260200161016a565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360208110156101d357600080fd5b5035610668565b604080516001600160a01b039092168252519081900360200190f35b6102226004803603604081101561020c57600080fd5b506001600160a01b0381351690602001356106ca565b005b6102226004803603604081101561023a57600080fd5b506001600160a01b03813516906020013515156107a5565b6102226004803603606081101561026857600080fd5b506001600160a01b038135811691602081013590911690604001356107b3565b6102226004803603604081101561029e57600080fd5b8101906020810181356401000000008111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460018302840111640100000000831117156102ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061080a945050505050565b610222600480360360408110156103cb57600080fd5b506001600160a01b0381351690602001356108c7565b610222600480360360608110156103f757600080fd5b506001600160a01b038135811691602081013590911690604001356108d1565b6101da6004803603602081101561042d57600080fd5b50356108ec565b61045a6004803603602081101561044a57600080fd5b50356001600160a01b0316610946565b60408051918252519081900360200190f35b6101486109a9565b6102226004803603604081101561048a57600080fd5b506001600160a01b0381351690602001351515610a0a565b610222600480360360808110156104b857600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156104f357600080fd5b82018360208201111561050557600080fd5b8035906020019184600183028401116401000000008311171561052757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b0f945050505050565b6101486004803603602081101561057e57600080fd5b5035610b6d565b61012c6004803603604081101561059b57600080fd5b506001600160a01b0381358116916020013516610b73565b6001600160e01b03191660009081526033602052604090205460ff1690565b60658054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b5050505050905090565b600061067382610ba6565b6106ae5760405162461bcd60e51b815260040180806020018281038252602c815260200180611765602c913960400191505060405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106d5826108ec565b9050806001600160a01b0316836001600160a01b031614156107285760405162461bcd60e51b81526004018080602001828103825260218152602001806117ba6021913960400191505060405180910390fd5b806001600160a01b031661073a610bc3565b6001600160a01b0316148061075b575061075b81610756610bc3565b610b73565b6107965760405162461bcd60e51b81526004018080602001828103825260388152602001806116ac6038913960400191505060405180910390fd5b6107a08383610bc7565b505050565b6107af8282610c35565b5050565b6107c46107be610bc3565b82610c95565b6107ff5760405162461bcd60e51b81526004018080602001828103825260318152602001806117db6031913960400191505060405180910390fd5b6107a0838383610cc1565b600054610100900460ff16806108235750610823610df1565b80610831575060005460ff16155b61086c5760405162461bcd60e51b815260040180806020018281038252602e815260200180611737602e913960400191505060405180910390fd5b600054610100900460ff16158015610897576000805460ff1961ff0019909116610100171660011790555b6108a18383610e02565b6108a9610ed7565b6108b1610f89565b80156107a0576000805461ff0019169055505050565b6107af8282611029565b6107a083838360405180602001604052806000815250610b0f565b6000818152606760205260408120546001600160a01b0316806109405760405162461bcd60e51b815260040180806020018281038252602981526020018061170e6029913960400191505060405180910390fd5b92915050565b60006001600160a01b03821661098d5760405162461bcd60e51b815260040180806020018281038252602a8152602001806116e4602a913960400191505060405180910390fd5b506001600160a01b031660009081526068602052604090205490565b60668054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561065e5780601f106106335761010080835404028352916020019161065e565b610a12610bc3565b6001600160a01b0316826001600160a01b03161415610a78576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80606a6000610a85610bc3565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ac9610bc3565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610b20610b1a610bc3565b83610c95565b610b5b5760405162461bcd60e51b81526004018080602001828103825260318152602001806117db6031913960400191505060405180910390fd5b610b6784848484611043565b50505050565b50606090565b6001600160a01b03811660009081526097602052604081205460ff1680610b9f5750610b9f8383611095565b9392505050565b6000908152606760205260409020546001600160a01b0316151590565b3390565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bfc826108ec565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216600081815260976020908152604091829020805460ff1916851515908117909155825190815291517f270dbb8ba4292910ae92862466486be25c355c837270a3d8824b36a8bc7c653b9281900390910190a25050565b6001600160a01b03821660009081526097602052604081205460ff1680610b9f5750610b9f83836110c3565b826001600160a01b0316610cd4826108ec565b6001600160a01b031614610d195760405162461bcd60e51b81526004018080602001828103825260298152602001806117916029913960400191505060405180910390fd5b6001600160a01b038216610d5e5760405162461bcd60e51b815260040180806020018281038252602481526020018061165c6024913960400191505060405180910390fd5b610d698383836107a0565b610d74600082610bc7565b6001600160a01b038084166000818152606860209081526040808320805460001901905593861680835284832080546001019055858352606790915283822080546001600160a01b031916821790559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610dfc30611167565b15905090565b600054610100900460ff1680610e1b5750610e1b610df1565b80610e29575060005460ff16155b610e645760405162461bcd60e51b815260040180806020018281038252602e815260200180611737602e913960400191505060405180910390fd5b600054610100900460ff16158015610e8f576000805460ff1961ff0019909116610100171660011790555b8251610ea2906065906020860190611588565b508151610eb6906066906020850190611588565b50610ec76380ac58cd60e01b61116d565b6108b1635b5e139f60e01b61116d565b600054610100900460ff1680610ef05750610ef0610df1565b80610efe575060005460ff16155b610f395760405162461bcd60e51b815260040180806020018281038252602e815260200180611737602e913960400191505060405180910390fd5b600054610100900460ff16158015610f64576000805460ff1961ff0019909116610100171660011790555b610f746301ffc9a760e01b61116d565b8015610f86576000805461ff00191690555b50565b600054610100900460ff1680610fa25750610fa2610df1565b80610fb0575060005460ff16155b610feb5760405162461bcd60e51b815260040180806020018281038252602e815260200180611737602e913960400191505060405180910390fd5b600054610100900460ff16158015610f74576000805460ff1961ff0019909116610100171660011790558015610f86576000805461ff001916905550565b6107af8282604051806020016040528060008152506111f1565b61104e848484610cc1565b61105a84848484611243565b610b675760405162461bcd60e51b815260040180806020018281038252603281526020018061162a6032913960400191505060405180910390fd5b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006110ce82610ba6565b6111095760405162461bcd60e51b815260040180806020018281038252602c815260200180611680602c913960400191505060405180910390fd5b6000611114836108ec565b9050806001600160a01b0316846001600160a01b0316148061114f5750836001600160a01b031661114484610668565b6001600160a01b0316145b8061115f575061115f8185610b73565b949350505050565b3b151590565b6001600160e01b031980821614156111cc576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b6111fb83836113f8565b6112086000848484611243565b6107a05760405162461bcd60e51b815260040180806020018281038252603281526020018061162a6032913960400191505060405180910390fd5b6000611257846001600160a01b0316611167565b156113ed57836001600160a01b031663150b7a02611273610bc3565b8786866040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112e65781810151838201526020016112ce565b50505050905090810190601f1680156113135780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561133557600080fd5b505af192505050801561135a57506040513d602081101561135557600080fd5b505160015b6113d3573d808015611388576040519150601f19603f3d011682016040523d82523d6000602084013e61138d565b606091505b5080516113cb5760405162461bcd60e51b815260040180806020018281038252603281526020018061162a6032913960400191505060405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061115f565b506001949350505050565b6001600160a01b038216611453576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6000818152606b602052604090205460ff16156114ae576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88185b1c9958591e48189d5c9b995960621b604482015290519081900360640190fd5b6114b781610ba6565b15611509576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611515600083836107a0565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b03191684179055516107af9285928592839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826115be5760008555611604565b82601f106115d757805160ff1916838001178555611604565b82800160010185558215611604579182015b828111156116045782518255916020019190600101906115e9565b50611610929150611614565b5090565b5b80821115611610576000815560010161161556fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212204e09d51dbe9df762a53d1eadf01004b7f10be7aea5956eb42cec300dcf28f04564736f6c63430007060033";

type ERC721DefaultApprovalTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721DefaultApprovalTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721DefaultApprovalTest__factory extends ContractFactory {
  constructor(...args: ERC721DefaultApprovalTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721DefaultApprovalTest> {
    return super.deploy(overrides || {}) as Promise<ERC721DefaultApprovalTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721DefaultApprovalTest {
    return super.attach(address) as ERC721DefaultApprovalTest;
  }
  override connect(signer: Signer): ERC721DefaultApprovalTest__factory {
    return super.connect(signer) as ERC721DefaultApprovalTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721DefaultApprovalTestInterface {
    return new utils.Interface(_abi) as ERC721DefaultApprovalTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721DefaultApprovalTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721DefaultApprovalTest;
  }
}
