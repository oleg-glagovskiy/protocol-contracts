/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155DefaultApprovalTest,
  ERC1155DefaultApprovalTestInterface,
} from "../../../../test/contracts/erc-1155/ERC1155DefaultApprovalTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasApproval",
        type: "bool",
      },
    ],
    name: "DefaultApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "__ERC1155DefaultApprovalTest_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "hasApproval",
        type: "bool",
      },
    ],
    name: "setDefaultApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cf0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80631a6993f9116100715780631a6993f91461021a5780632eb2c2d6146102be5780634e1273f41461047f578063a22cb465146105f2578063e985e9c514610620578063f242432a1461064e576100a8565b8062fdd58e146100ad57806301ffc9a7146100eb5780630e89341c14610126578063156e29f6146101b857806318054c37146101ec575b600080fd5b6100d9600480360360408110156100c357600080fd5b506001600160a01b038135169060200135610717565b60408051918252519081900360200190f35b6101126004803603602081101561010157600080fd5b50356001600160e01b031916610786565b604080519115158252519081900360200190f35b6101436004803603602081101561013c57600080fd5b50356107a5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017d578181015183820152602001610165565b50505050905090810190601f1680156101aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360608110156101ce57600080fd5b506001600160a01b03813516906020810135906040013561083d565b005b6101ea6004803603604081101561020257600080fd5b506001600160a01b038135169060200135151561085d565b6101ea6004803603602081101561023057600080fd5b810190602081018135600160201b81111561024a57600080fd5b82018360208201111561025c57600080fd5b803590602001918460018302840111600160201b8311171561027d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061086b945050505050565b6101ea600480360360a08110156102d457600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561030757600080fd5b82018360208201111561031957600080fd5b803590602001918460208302840111600160201b8311171561033a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561038957600080fd5b82018360208201111561039b57600080fd5b803590602001918460208302840111600160201b831117156103bc57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561040b57600080fd5b82018360208201111561041d57600080fd5b803590602001918460018302840111600160201b8311171561043e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610926945050505050565b6105a26004803603604081101561049557600080fd5b810190602081018135600160201b8111156104af57600080fd5b8201836020820111156104c157600080fd5b803590602001918460208302840111600160201b831117156104e257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561053157600080fd5b82018360208201111561054357600080fd5b803590602001918460208302840111600160201b8311171561056457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610c29945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156105de5781810151838201526020016105c6565b505050509050019250505060405180910390f35b6101ea6004803603604081101561060857600080fd5b506001600160a01b0381351690602001351515610d15565b6101126004803603604081101561063657600080fd5b506001600160a01b0381358116916020013516610e04565b6101ea600480360360a081101561066457600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b8111156106a357600080fd5b8201836020820111156106b557600080fd5b803590602001918460018302840111600160201b831117156106d657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e37945050505050565b60006001600160a01b03831661075e5760405162461bcd60e51b815260040180806020018281038252602b815260200180611b1d602b913960400191505060405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b6001600160e01b03191660009081526033602052604090205460ff1690565b60678054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b50505050509050919050565b61085883838360405180602001604052806000815250611002565b505050565b610867828261110a565b5050565b600054610100900460ff1680610884575061088461116a565b80610892575060005460ff16155b6108cd5760405162461bcd60e51b815260040180806020018281038252602e815260200180611bc8602e913960400191505060405180910390fd5b600054610100900460ff161580156108f8576000805460ff1961ff0019909116610100171660011790555b61090061117c565b61090861122e565b610911826112ce565b8015610867576000805461ff00191690555050565b81518351146109665760405162461bcd60e51b8152600401808060200182810382526028815260200180611c726028913960400191505060405180910390fd5b6001600160a01b0384166109ab5760405162461bcd60e51b8152600401808060200182810382526025815260200180611b716025913960400191505060405180910390fd5b6109b3611384565b6001600160a01b0316856001600160a01b031614806109de57506109de856109d9611384565b610e04565b610a195760405162461bcd60e51b8152600401808060200182810382526032815260200180611b966032913960400191505060405180910390fd5b6000610a23611384565b9050610a33818787878787610c21565b60005b8451811015610b39576000858281518110610a4d57fe5b602002602001015190506000858381518110610a6557fe5b60200260200101519050610ad2816040518060600160405280602a8152602001611bf6602a91396065600086815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546113889092919063ffffffff16565b60008381526065602090815260408083206001600160a01b038e811685529252808320939093558a1681522054610b09908261141f565b60009283526065602090815260408085206001600160a01b038c1686529091529092209190915550600101610a36565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610bbf578181015183820152602001610ba7565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610bfe578181015183820152602001610be6565b5050505090500194505050505060405180910390a4610c21818787878787611479565b505050505050565b60608151835114610c6b5760405162461bcd60e51b8152600401808060200182810382526029815260200180611c496029913960400191505060405180910390fd5b6000835167ffffffffffffffff81118015610c8557600080fd5b50604051908082528060200260200182016040528015610caf578160200160208202803683370190505b50905060005b8451811015610d0d57610cee858281518110610ccd57fe5b6020026020010151858381518110610ce157fe5b6020026020010151610717565b828281518110610cfa57fe5b6020908102919091010152600101610cb5565b509392505050565b816001600160a01b0316610d27611384565b6001600160a01b03161415610d6d5760405162461bcd60e51b8152600401808060200182810382526029815260200180611c206029913960400191505060405180910390fd5b8060666000610d7a611384565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610dbe611384565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6001600160a01b03811660009081526097602052604081205460ff1680610e305750610e3083836116f8565b9392505050565b6001600160a01b038416610e7c5760405162461bcd60e51b8152600401808060200182810382526025815260200180611b716025913960400191505060405180910390fd5b610e84611384565b6001600160a01b0316856001600160a01b03161480610eaa5750610eaa856109d9611384565b610ee55760405162461bcd60e51b8152600401808060200182810382526029815260200180611b486029913960400191505060405180910390fd5b6000610eef611384565b9050610f0f818787610f0088611726565b610f0988611726565b87610c21565b610f56836040518060600160405280602a8152602001611bf6602a913960008781526065602090815260408083206001600160a01b038d1684529091529020549190611388565b60008581526065602090815260408083206001600160a01b038b81168552925280832093909355871681522054610f8d908461141f565b60008581526065602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4610c2181878787878761176b565b6001600160a01b0384166110475760405162461bcd60e51b8152600401808060200182810382526021815260200180611c9a6021913960400191505060405180910390fd5b6000611051611384565b905061106381600087610f0088611726565b60008481526065602090815260408083206001600160a01b0389168452909152902054611090908461141f565b60008581526065602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46111038160008787878761176b565b5050505050565b6001600160a01b038216600081815260976020908152604091829020805460ff1916851515908117909155825190815291517f270dbb8ba4292910ae92862466486be25c355c837270a3d8824b36a8bc7c653b9281900390910190a25050565b6000611175306118dc565b1590505b90565b600054610100900460ff1680611195575061119561116a565b806111a3575060005460ff16155b6111de5760405162461bcd60e51b815260040180806020018281038252602e815260200180611bc8602e913960400191505060405180910390fd5b600054610100900460ff16158015611209576000805460ff1961ff0019909116610100171660011790555b6112196301ffc9a760e01b6118e2565b801561122b576000805461ff00191690555b50565b600054610100900460ff1680611247575061124761116a565b80611255575060005460ff16155b6112905760405162461bcd60e51b815260040180806020018281038252602e815260200180611bc8602e913960400191505060405180910390fd5b600054610100900460ff16158015611219576000805460ff1961ff001990911661010017166001179055801561122b576000805461ff001916905550565b600054610100900460ff16806112e757506112e761116a565b806112f5575060005460ff16155b6113305760405162461bcd60e51b815260040180806020018281038252602e815260200180611bc8602e913960400191505060405180910390fd5b600054610100900460ff1615801561135b576000805460ff1961ff0019909116610100171660011790555b61136482611966565b611374636cdb3d1360e11b6118e2565b6109116303a24d0760e21b6118e2565b3390565b600081848411156114175760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113dc5781810151838201526020016113c4565b50505050905090810190601f1680156114095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610e30576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b61148b846001600160a01b03166118dc565b15610c2157836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611519578181015183820152602001611501565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611558578181015183820152602001611540565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561159457818101518382015260200161157c565b50505050905090810190601f1680156115c15780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156115e657600080fd5b505af192505050801561160b57506040513d602081101561160657600080fd5b505160015b6116a057611617611a1b565b806116225750611669565b60405162461bcd60e51b81526020600482018181528351602484015283518493919283926044019190850190808383600083156113dc5781810151838201526020016113c4565b60405162461bcd60e51b8152600401808060200182810382526034815260200180611ac16034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146116ef5760405162461bcd60e51b8152600401808060200182810382526028815260200180611af56028913960400191505060405180910390fd5b50505050505050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061175a57fe5b602090810291909101015292915050565b61177d846001600160a01b03166118dc565b15610c2157836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561180c5781810151838201526020016117f4565b50505050905090810190601f1680156118395780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561185c57600080fd5b505af192505050801561188157506040513d602081101561187c57600080fd5b505160015b61188d57611617611a1b565b6001600160e01b0319811663f23a6e6160e01b146116ef5760405162461bcd60e51b8152600401808060200182810382526028815260200180611af56028913960400191505060405180910390fd5b3b151590565b6001600160e01b03198082161415611941576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b8051610867906067906020840190828054600181600116156101000203166002900490600052602060002090601f0160209004810192826119aa57600085556119f0565b82601f106119c357805160ff19168380011785556119f0565b828001600101855582156119f0579182015b828111156119f05782518255916020019190600101906119d5565b506119fc929150611a00565b5090565b5b808211156119fc5760008155600101611a01565b60e01c90565b600060443d1015611a2b57611179565b600481823e6308c379a0611a3f8251611a15565b14611a4957611179565b6040513d600319016004823e80513d67ffffffffffffffff8160248401118184111715611a795750505050611179565b82840192508251915080821115611a935750505050611179565b503d83016020828401011115611aab57505050611179565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a2646970667358221220bacd350a294b329b6851afac60e6081a6398c15615e7c15fc283a0b3bdb7176464736f6c63430007060033";

type ERC1155DefaultApprovalTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155DefaultApprovalTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155DefaultApprovalTest__factory extends ContractFactory {
  constructor(...args: ERC1155DefaultApprovalTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155DefaultApprovalTest> {
    return super.deploy(overrides || {}) as Promise<ERC1155DefaultApprovalTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155DefaultApprovalTest {
    return super.attach(address) as ERC1155DefaultApprovalTest;
  }
  override connect(signer: Signer): ERC1155DefaultApprovalTest__factory {
    return super.connect(signer) as ERC1155DefaultApprovalTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155DefaultApprovalTestInterface {
    return new utils.Interface(_abi) as ERC1155DefaultApprovalTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155DefaultApprovalTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155DefaultApprovalTest;
  }
}
